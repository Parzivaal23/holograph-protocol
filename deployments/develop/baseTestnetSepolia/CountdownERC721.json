{
  "address": "0x45949B99358779d09B99F87f2D049A3611b13e00",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "Access_MissingRoleOrAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Access_OnlyAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Access_OnlyMinter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Access_WithdrawNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "proposedAddress",
          "type": "address"
        }
      ],
      "name": "Admin_InvalidUpgradeAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Admin_UnableToFinalizeNotOpenEdition",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "countdownEnd",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "mintTimeCost",
          "type": "uint128"
        }
      ],
      "name": "CountdownEndMustBeDivisibleByMintTimeCost",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExternalMetadataRenderer_CallFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FeePaymentFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LazyMint_AlreadyInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MintFee_FundsSendFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Mint_SoldOut",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotInitialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Purchase_CountdownCompleted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Purchase_TooManyForAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "correctPrice",
          "type": "uint256"
        }
      ],
      "name": "Purchase_WrongPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Sale_Inactive",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "maxRoyaltyBPS",
          "type": "uint16"
        }
      ],
      "name": "Setup_RoyaltyPercentageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Withdraw_FundsSendFailure",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "prevURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "ContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "changedBy",
          "type": "address"
        }
      ],
      "name": "FundsRecipientChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawnBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawnTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintFeeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "mintFeeRecipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "MintFeePayout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "NFTMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numberOfMints",
          "type": "uint256"
        }
      ],
      "name": "OpenMintFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pricePerToken",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "firstPurchasedTokenId",
          "type": "uint256"
        }
      ],
      "name": "Sale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "changedBy",
          "type": "address"
        }
      ],
      "name": "SalesConfigChanged",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DESCRIPTION",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "END_DATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_END_DATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "INITIAL_MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINT_INTERVAL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "START_DATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentTheoricalMaxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dropsPriceOracle",
      "outputs": [
        {
          "internalType": "contract IDropsPriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNativePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initPayload",
          "type": "bytes"
        }
      ],
      "name": "init",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "isAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "mintedPerAddress",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalMints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "presaleMints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "publicMints",
              "type": "uint256"
            }
          ],
          "internalType": "struct AddressMintDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "publicSaleActive",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "publicSalePrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "publicSaleStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSalePurchasePerAddress",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalMinted",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxSupply",
              "type": "uint256"
            }
          ],
          "internalType": "struct CustomERC721SaleDetails",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salesConfig",
      "outputs": [
        {
          "internalType": "uint104",
          "name": "publicSalePrice",
          "type": "uint104"
        },
        {
          "internalType": "uint24",
          "name": "maxSalePurchasePerAddress",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "setContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newRecipientAddress",
          "type": "address"
        }
      ],
      "name": "setFundsRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minterAddress",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint104",
          "name": "publicSalePrice",
          "type": "uint104"
        },
        {
          "internalType": "uint24",
          "name": "maxSalePurchasePerAddress",
          "type": "uint24"
        }
      ],
      "name": "setSaleConfiguration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalMintsByAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x274e51f6f08eccf01c4160f6dbeb72a797a3843fa7b5e563091dfdc5b0ecd77b",
  "receipt": {
    "to": "0x2694a14ea8D91F4CC314A3dBe8819eaadb7E025E",
    "from": "0x5f5C3548f96C7DA33A18E5F2F2f13519e1c8bD0d",
    "contractAddress": null,
    "transactionIndex": 2,
    "gasUsed": "3757039",
    "logsBloom": "0x00000000000000000000000000000000000000000001000000000000000000000000000000000000000400000000000400000000000000000000000000000000000000000000000004000000000000000000000002000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000040000000000000000400000000000000000000000000000000200001000000000",
    "blockHash": "0xcb975ed806e8196f3940381bfc28a6360fdfe2d9a2e21aa617335ebca56f5b50",
    "transactionHash": "0x274e51f6f08eccf01c4160f6dbeb72a797a3843fa7b5e563091dfdc5b0ecd77b",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 9370901,
        "transactionHash": "0x274e51f6f08eccf01c4160f6dbeb72a797a3843fa7b5e563091dfdc5b0ecd77b",
        "address": "0x45949B99358779d09B99F87f2D049A3611b13e00",
        "topics": [
          "0xc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a16"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        "logIndex": 1,
        "blockHash": "0xcb975ed806e8196f3940381bfc28a6360fdfe2d9a2e21aa617335ebca56f5b50"
      },
      {
        "transactionIndex": 2,
        "blockNumber": 9370901,
        "transactionHash": "0x274e51f6f08eccf01c4160f6dbeb72a797a3843fa7b5e563091dfdc5b0ecd77b",
        "address": "0x2694a14ea8D91F4CC314A3dBe8819eaadb7E025E",
        "topics": [
          "0x8ffcdc15a283d706d38281f500270d8b5a656918f555de0913d7455e3e6bc1bf"
        ],
        "data": "0x00000000000000000000000045949b99358779d09b99f87f2d049a3611b13e00",
        "logIndex": 2,
        "blockHash": "0xcb975ed806e8196f3940381bfc28a6360fdfe2d9a2e21aa617335ebca56f5b50"
      }
    ],
    "blockNumber": 9370901,
    "cumulativeGasUsed": "3898928",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "894406292eb6201e3305288a473d2a92",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"Access_MissingRoleOrAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Access_OnlyAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Access_OnlyMinter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Access_WithdrawNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedAddress\",\"type\":\"address\"}],\"name\":\"Admin_InvalidUpgradeAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Admin_UnableToFinalizeNotOpenEdition\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"countdownEnd\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"mintTimeCost\",\"type\":\"uint128\"}],\"name\":\"CountdownEndMustBeDivisibleByMintTimeCost\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalMetadataRenderer_CallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FeePaymentFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LazyMint_AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintFee_FundsSendFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Mint_SoldOut\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Purchase_CountdownCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Purchase_TooManyForAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"correctPrice\",\"type\":\"uint256\"}],\"name\":\"Purchase_WrongPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Sale_Inactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"maxRoyaltyBPS\",\"type\":\"uint16\"}],\"name\":\"Setup_RoyaltyPercentageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Withdraw_FundsSendFailure\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"prevURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"ContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"FundsRecipientChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawnBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawnTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintFeeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mintFeeRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"MintFeePayout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberOfMints\",\"type\":\"uint256\"}],\"name\":\"OpenMintFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstPurchasedTokenId\",\"type\":\"uint256\"}],\"name\":\"Sale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"changedBy\",\"type\":\"address\"}],\"name\":\"SalesConfigChanged\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DESCRIPTION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"END_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_END_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INITIAL_MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_INTERVAL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"START_DATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTheoricalMaxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dropsPriceOracle\",\"outputs\":[{\"internalType\":\"contract IDropsPriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNativePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initPayload\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"mintedPerAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalMints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"presaleMints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicMints\",\"type\":\"uint256\"}],\"internalType\":\"struct AddressMintDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"publicSaleActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"publicSalePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicSaleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSalePurchasePerAddress\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"internalType\":\"struct CustomERC721SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesConfig\",\"outputs\":[{\"internalType\":\"uint104\",\"name\":\"publicSalePrice\",\"type\":\"uint104\"},{\"internalType\":\"uint24\",\"name\":\"maxSalePurchasePerAddress\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newRecipientAddress\",\"type\":\"address\"}],\"name\":\"setFundsRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minterAddress\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint104\",\"name\":\"publicSalePrice\",\"type\":\"uint104\"},{\"internalType\":\"uint24\",\"name\":\"maxSalePurchasePerAddress\",\"type\":\"uint24\"}],\"name\":\"setSaleConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalMintsByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract subscribes to the following HolographERC721 events:       - customContractURI       Do not enable or subscribe to any other events unless you modified the source code for them.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor is left empty and init is used instead\"},\"currentTheoricalMaxSupply()\":{\"details\":\"The max supply is calculated based on the current time and the mint interval, by subtracting      the elapsed_mint intervals from the initial max supply.      - The max supply is the initial max supply if the current time is less than the start date.      - The max supply is zero if the current time is greater than the end date.      - The max supply is decreased by one for each mint interval that has passed.      - The max supply is calculated by subtracting the intervals elapsed from the initial max supply.\",\"returns\":{\"_0\":\"max supply\"}},\"init(bytes)\":{\"details\":\"This function is called by the deployer/the factory when creating a contract\",\"params\":{\"initPayload\":\"abi encoded payload (CountdownERC721Initializer struct) to use for contract initilaization\"}},\"isAdmin(address)\":{\"details\":\"Getter for admin role associated with the contract to handle metadata\",\"returns\":{\"_0\":\"boolean if address is admin\"}},\"mintTo(address,uint256)\":{\"params\":{\"quantity\":\"quantity to mint\",\"recipient\":\"recipient to mint to\"}},\"mintedPerAddress(address)\":{\"details\":\"Number of NFTs the user has minted per address\",\"params\":{\"minter\":\"to get counts for\"}},\"purchase(uint256)\":{\"details\":\"This allows the user to purchase/mint a edition at the given price in the contract.\",\"params\":{\"quantity\":\"quantity to purchase\"}},\"saleDetails()\":{\"details\":\"Returns the sale details for the contract\",\"returns\":{\"_0\":\"SaleDetails sale information details\"}},\"setContractURI(string)\":{\"details\":\"Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.\",\"params\":{\"_uri\":\"keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\"}},\"setFundsRecipient(address)\":{\"params\":{\"newRecipientAddress\":\"new funds recipient address\"}},\"setMinter(address)\":{\"params\":{\"minterAddress\":\"new minter address\"}},\"setSaleConfiguration(uint104,uint24)\":{\"details\":\"This sets the sales configuration\",\"params\":{\"maxSalePurchasePerAddress\":\"Max # of purchases (public) per address allowed\",\"publicSalePrice\":\"New public sale price\"}},\"tokenURI(uint256)\":{\"details\":\"Returns a base64 encoded metadata URI for a given tokenId.\",\"params\":{\"tokenId\":\"The ID of the token to get URI for\"},\"returns\":{\"_0\":\"Token URI\"}},\"version()\":{\"details\":\"Used for contract versioning and validation\",\"returns\":{\"_0\":\"version of the contract\"}}},\"stateVariables\":{\"DESCRIPTION\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"FUNDS_RECIPIENT\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"INITIAL_END_DATE\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"INITIAL_MAX_SUPPLY\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"MINT_INTERVAL\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"START_DATE\":{\"details\":\"This storage variable is set only once in the init and can be considered as immutable\"},\"STATIC_GAS_LIMIT\":{\"details\":\"Gas limit for transferring funds\"},\"_baseURI\":{\"details\":\"Internal reference to the base URI\"},\"_currentTokenId\":{\"details\":\"Internal reference used for minting incremental token ids.\"},\"dropsPriceOracle\":{\"details\":\"Address of the price oracle proxy\"},\"minter\":{\"details\":\"This account tokens on behalf of those that purchase them offchain\"},\"totalMintsByAddress\":{\"details\":\"Mapping for the total mints by address\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Access_MissingRoleOrAdmin(bytes32)\":[{\"notice\":\"Missing the given role or admin access\"}],\"Access_OnlyAdmin()\":[{\"notice\":\"Only admin can access this function\"}],\"Access_OnlyMinter()\":[{\"notice\":\"Only minter can access this function\"}],\"Access_WithdrawNotAllowed()\":[{\"notice\":\"Withdraw is not allowed by this user\"}],\"Admin_InvalidUpgradeAddress(address)\":[{\"notice\":\"Invalid admin upgrade address\"}],\"Admin_UnableToFinalizeNotOpenEdition()\":[{\"notice\":\"Unable to finalize an edition not marked as open (size set to uint64_max_value)\"}],\"ExternalMetadataRenderer_CallFailed()\":[{\"notice\":\"Call to external metadata renderer failed.\"}],\"FeePaymentFailed()\":[{\"notice\":\"Fee payout failed\"}],\"LazyMint_AlreadyInitialized()\":[{\"notice\":\"Lazy mint initialization failed\"}],\"MintFee_FundsSendFailure()\":[{\"notice\":\"Mint fee send failure\"}],\"Mint_SoldOut()\":[{\"notice\":\"NFT sold out\"}],\"NotInitialized()\":[{\"notice\":\"Contract is not initialized yet\"}],\"Purchase_CountdownCompleted()\":[{\"notice\":\"The countdown has been completed\"}],\"Purchase_TooManyForAddress()\":[{\"notice\":\"Too many purchase for address\"}],\"Purchase_WrongPrice(uint256)\":[{\"notice\":\"Wrong price for purchase\"}],\"Sale_Inactive()\":[{\"notice\":\"Sale is inactive\"}],\"Setup_RoyaltyPercentageTooHigh(uint16)\":[{\"notice\":\"Royalty percentage too high\"}],\"Withdraw_FundsSendFailure()\":[{\"notice\":\"Cannot withdraw funds due to ETH send failure.\"}]},\"events\":{\"FundsRecipientChanged(address,address)\":{\"notice\":\"Event emitted when the funds recipient is changed\"},\"FundsWithdrawn(address,address,uint256)\":{\"notice\":\"Event emitted when the funds are withdrawn from the minting contract\"},\"MintFeePayout(uint256,address,bool)\":{\"notice\":\"Event emitted for mint fee payout\"},\"NFTMinted(address,uint256,uint256)\":{\"notice\":\"Event emitted when an nfs is minted\"},\"OpenMintFinalized(address,uint256)\":{\"notice\":\"Event emitted when an open mint is finalized and further minting is closed forever on the contract.\"},\"Sale(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted for each sale\"},\"SalesConfigChanged(address)\":{\"notice\":\"Sales configuration has been changed\"}},\"kind\":\"user\",\"methods\":{\"DESCRIPTION()\":{\"notice\":\"Getter for the description\"},\"END_DATE()\":{\"notice\":\"Getter for the end date\"},\"INITIAL_END_DATE()\":{\"notice\":\"Getter for the initial end date\"},\"INITIAL_MAX_SUPPLY()\":{\"notice\":\"Getter for the initial max supply\"},\"MINT_INTERVAL()\":{\"notice\":\"Getter for the mint interval\"},\"START_DATE()\":{\"notice\":\"Getter for the purchase start date\"},\"contractURI()\":{\"notice\":\"Returns the contract metadata URI.\"},\"currentTheoricalMaxSupply()\":{\"notice\":\"Returns the theoretical maximum supply for the current time\"},\"getNativePrice()\":{\"notice\":\"Convert USD price to current price in native Ether units\"},\"init(bytes)\":{\"notice\":\"Used internally to initialize the contract instead of through a constructor\"},\"mintTo(address,uint256)\":{\"notice\":\"Minter account mints tokens to a recipient that has paid offchain\"},\"minter()\":{\"notice\":\"Getter for the minter\"},\"name()\":{\"notice\":\"Returns the name of the token through the holographer entrypoint\"},\"saleDetails()\":{\"notice\":\"Sale details\"},\"salesConfig()\":{\"notice\":\"Sales configuration\"},\"setContractURI(string)\":{\"notice\":\"Lets a contract admin set the URI for contract-level metadata.\"},\"setFundsRecipient(address)\":{\"notice\":\"Set a different funds recipient\"},\"setMinter(address)\":{\"notice\":\"Set the minter address\"},\"totalMinted()\":{\"notice\":\"Returns the total amount of tokens minted in the contract.\"},\"version()\":{\"notice\":\"Returns the version of the contract\"},\"withdraw()\":{\"notice\":\"This withdraws native tokens from the contract to the contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/CountdownERC721.sol\":\"CountdownERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=erc721a-upgradeable/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/abstract/ContractMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\n/// @author thirdweb\\n\\nimport \\\"../interface/IContractMetadata.sol\\\";\\n\\n/**\\n *  @title   Contract Metadata\\n *  @notice  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\\n *           for you contract.\\n *           Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\\n */\\n\\nabstract contract ContractMetadata is IContractMetadata {\\n  /// @notice Returns the contract metadata URI.\\n  string public override contractURI;\\n\\n  /**\\n   *  @notice         Lets a contract admin set the URI for contract-level metadata.\\n   *  @dev            Caller should be authorized to setup contractURI, e.g. contract admin.\\n   *                  See {_canSetContractURI}.\\n   *                  Emits {ContractURIUpdated Event}.\\n   *\\n   *  @param _uri     keccak256 hash of the role. e.g. keccak256(\\\"TRANSFER_ROLE\\\")\\n   */\\n  function setContractURI(string memory _uri) external override {\\n    if (!_canSetContractURI()) {\\n      revert(\\\"Not authorized\\\");\\n    }\\n\\n    _setupContractURI(_uri);\\n  }\\n\\n  /// @dev Lets a contract admin set the URI for contract-level metadata.\\n  function _setupContractURI(string memory _uri) internal {\\n    string memory prevURI = contractURI;\\n    contractURI = _uri;\\n\\n    emit ContractURIUpdated(prevURI, _uri);\\n  }\\n\\n  /// @dev Returns whether contract metadata can be set in the given execution context.\\n  function _canSetContractURI() internal view virtual returns (bool);\\n}\\n\",\"keccak256\":\"0xf34fb4c6944c3cce0d8d67db62d6973d42bcaf9e5289f5d9a200bac018cbcec4\",\"license\":\"Apache-2.0\"},\"src/abstract/ERC721H.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../abstract/Initializable.sol\\\";\\n\\nabstract contract ERC721H is Initializable {\\n  /**\\n   * @dev bytes32(uint256(keccak256('eip1967.Holograph.holographer')) - 1)\\n   */\\n  bytes32 constant _holographerSlot = 0xe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd;\\n  /**\\n   * @dev bytes32(uint256(keccak256('eip1967.Holograph.owner')) - 1)\\n   */\\n  bytes32 constant _ownerSlot = 0xb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf772777;\\n\\n  modifier onlyHolographer() {\\n    require(msg.sender == holographer(), \\\"ERC721: holographer only\\\");\\n    _;\\n  }\\n\\n  modifier onlyOwner() {\\n    require(msgSender() == _getOwner(), \\\"ERC721: owner only function\\\");\\n    _;\\n  }\\n\\n  /**\\n   * @dev Constructor is left empty and init is used instead\\n   */\\n  constructor() {}\\n\\n  /**\\n   * @notice Used internally to initialize the contract instead of through a constructor\\n   * @dev This function is called by the deployer/factory when creating a contract\\n   * @param initPayload abi encoded payload to use for contract initilaization\\n   */\\n  function init(bytes memory initPayload) external virtual override returns (bytes4) {\\n    return _init(initPayload);\\n  }\\n\\n  function _init(bytes memory /* initPayload*/) internal returns (bytes4) {\\n    require(!_isInitialized(), \\\"ERC721: already initialized\\\");\\n    address _holographer = msg.sender;\\n    address currentOwner;\\n    assembly {\\n      sstore(_holographerSlot, _holographer)\\n      currentOwner := sload(_ownerSlot)\\n    }\\n    require(currentOwner != address(0), \\\"HOLOGRAPH: owner not set\\\");\\n    _setInitialized();\\n    return InitializableInterface.init.selector;\\n  }\\n\\n  /**\\n   * @dev The Holographer passes original msg.sender via calldata. This function extracts it.\\n   */\\n  function msgSender() internal view returns (address sender) {\\n    assembly {\\n      switch eq(caller(), sload(_holographerSlot))\\n      case 0 {\\n        sender := caller()\\n      }\\n      default {\\n        sender := calldataload(sub(calldatasize(), 0x20))\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Address of Holograph ERC721 standards enforcer smart contract.\\n   */\\n  function holographer() internal view returns (address _holographer) {\\n    assembly {\\n      _holographer := sload(_holographerSlot)\\n    }\\n  }\\n\\n  function supportsInterface(bytes4) external pure virtual returns (bool) {\\n    return false;\\n  }\\n\\n  /**\\n   * @dev Address of initial creator/owner of the collection.\\n   */\\n  function owner() external view virtual returns (address) {\\n    return _getOwner();\\n  }\\n\\n  function isOwner() external view returns (bool) {\\n    return (msgSender() == _getOwner());\\n  }\\n\\n  function isOwner(address wallet) external view returns (bool) {\\n    return wallet == _getOwner();\\n  }\\n\\n  function _getOwner() internal view returns (address ownerAddress) {\\n    assembly {\\n      ownerAddress := sload(_ownerSlot)\\n    }\\n  }\\n\\n  function _setOwner(address ownerAddress) internal {\\n    assembly {\\n      sstore(_ownerSlot, ownerAddress)\\n    }\\n  }\\n\\n  function withdraw() external virtual onlyOwner {\\n    payable(_getOwner()).transfer(address(this).balance);\\n  }\\n\\n  event FundsReceived(address indexed source, uint256 amount);\\n\\n  /**\\n   * @dev This function emits an event to indicate native gas token receipt. Do not rely on this to work.\\n   *      Please use custom payable functions for accepting native value.\\n   */\\n  receive() external payable virtual {\\n    emit FundsReceived(msgSender(), msg.value);\\n  }\\n\\n  /**\\n   * @dev Return true for any un-implemented event hooks\\n   */\\n  fallback() external payable virtual {\\n    assembly {\\n      switch eq(sload(_holographerSlot), caller())\\n      case 1 {\\n        mstore(0x80, 0x0000000000000000000000000000000000000000000000000000000000000001)\\n        return(0x80, 0x20)\\n      }\\n      default {\\n        revert(0x00, 0x00)\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xd8c4c02d57b41387134df8c80db6f437ffb4a4e9db23a98ad93ec5fa2adb0ad1\",\"license\":\"UNLICENSED\"},\"src/abstract/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"../interface/InitializableInterface.sol\\\";\\n\\n/**\\n * @title Initializable\\n * @author https://github.com/holographxyz\\n * @notice Use init instead of constructor\\n * @dev This allows for use of init function to make one time initializations without the need for a constructor\\n */\\nabstract contract Initializable is InitializableInterface {\\n  /**\\n   * @dev bytes32(uint256(keccak256('eip1967.Holograph.initialized')) - 1)\\n   */\\n  bytes32 constant _initializedSlot = 0x4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a01;\\n\\n  /**\\n   * @dev Constructor is left empty and init is used instead\\n   */\\n  constructor() {}\\n\\n  /**\\n   * @notice Used internally to initialize the contract instead of through a constructor\\n   * @dev This function is called by the deployer/factory when creating a contract\\n   * @param initPayload abi encoded payload to use for contract initilaization\\n   */\\n  function init(bytes memory initPayload) external virtual returns (bytes4);\\n\\n  function _isInitialized() internal view returns (bool initialized) {\\n    assembly {\\n      initialized := sload(_initializedSlot)\\n    }\\n  }\\n\\n  function _setInitialized() internal {\\n    assembly {\\n      sstore(_initializedSlot, 0x0000000000000000000000000000000000000000000000000000000000000001)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xa55dc367285f96952dec56adfbfb48b6a4be31aef9ba0d30ad8c91023a572462\",\"license\":\"UNLICENSED\"},\"src/abstract/NonReentrant.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\nabstract contract NonReentrant {\\n  /**\\n   * @dev bytes32(uint256(keccak256('eip1967.Holograph.reentrant')) - 1)\\n   */\\n  bytes32 constant _reentrantSlot = 0x04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a3137279;\\n\\n  modifier nonReentrant() {\\n    require(getStatus() != 2, \\\"HOLOGRAPH: reentrant call\\\");\\n    setStatus(2);\\n    _;\\n    setStatus(1);\\n  }\\n\\n  constructor() {}\\n\\n  function getStatus() internal view returns (uint256 status) {\\n    assembly {\\n      status := sload(_reentrantSlot)\\n    }\\n  }\\n\\n  function setStatus(uint256 status) internal {\\n    assembly {\\n      sstore(_reentrantSlot, status)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x41f4719826a0fe72f970395b19991cca38b9afcbf6e66575deeb852cd59a2fe5\",\"license\":\"UNLICENSED\"},\"src/drops/interface/IDropsPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\ninterface IDropsPriceOracle {\\n  function convertUsdToWei(uint256 usdAmount) external view returns (uint256 weiAmount);\\n}\\n\",\"keccak256\":\"0x5376c2261c1d6b8551621d970669b3f2bc5d086edf953c130158fa9f17e6d15f\",\"license\":\"MIT\"},\"src/drops/library/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nlibrary Address {\\n  function isContract(address account) internal view returns (bool) {\\n    // This method relies on extcodesize/address.code.length, which returns 0\\n    // for contracts in construction, since the code is only stored at the end\\n    // of the constructor execution.\\n\\n    return account.code.length > 0;\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n    return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n  }\\n\\n  /**\\n   * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n   * but performing a delegate call.\\n   *\\n   * _Available since v3.4._\\n   */\\n  function functionDelegateCall(\\n    address target,\\n    bytes memory data,\\n    string memory errorMessage\\n  ) internal returns (bytes memory) {\\n    (bool success, bytes memory returndata) = target.delegatecall(data);\\n    return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n  }\\n\\n  /**\\n   * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n   * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n   *\\n   * _Available since v4.8._\\n   */\\n  function verifyCallResultFromTarget(\\n    address target,\\n    bool success,\\n    bytes memory returndata,\\n    string memory errorMessage\\n  ) internal view returns (bytes memory) {\\n    if (success) {\\n      if (returndata.length == 0) {\\n        // only check isContract if the call was successful and the return data is empty\\n        // otherwise we already know that it was a contract\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n      }\\n      return returndata;\\n    } else {\\n      _revert(returndata, errorMessage);\\n    }\\n  }\\n\\n  function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n    // Look for revert reason and bubble it up if present\\n    if (returndata.length > 0) {\\n      // The easiest way to bubble the revert reason is using memory via assembly\\n      /// @solidity memory-safe-assembly\\n      assembly {\\n        let returndata_size := mload(returndata)\\n        revert(add(32, returndata), returndata_size)\\n      }\\n    } else {\\n      revert(errorMessage);\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x819c3963e905a3cd7ccea4c94e368ef53d8ee9a164cc289f61b5650fbc22d4f3\",\"license\":\"MIT\"},\"src/drops/library/MerkleProof.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nlibrary MerkleProof {\\n  /**\\n   * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\\n   * defined by `root`. For this, a `proof` must be provided, containing\\n   * sibling hashes on the branch from the leaf to the root of the tree. Each\\n   * pair of leaves and each pair of pre-images are assumed to be sorted.\\n   */\\n  function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\\n    return processProof(proof, leaf) == root;\\n  }\\n\\n  /**\\n   * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\\n   * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\\n   * hash matches the root of the tree. When processing the proof, the pairs\\n   * of leafs & pre-images are assumed to be sorted.\\n   *\\n   * _Available since v4.4._\\n   */\\n  function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\\n    bytes32 computedHash = leaf;\\n    for (uint256 i = 0; i < proof.length; i++) {\\n      bytes32 proofElement = proof[i];\\n      if (computedHash <= proofElement) {\\n        // Hash(current computed hash + current element of the proof)\\n        computedHash = _efficientHash(computedHash, proofElement);\\n      } else {\\n        // Hash(current element of the proof + current computed hash)\\n        computedHash = _efficientHash(proofElement, computedHash);\\n      }\\n    }\\n    return computedHash;\\n  }\\n\\n  function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\\n    assembly {\\n      mstore(0x00, a)\\n      mstore(0x20, b)\\n      value := keccak256(0x00, 0x40)\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xdc532adb572d619a59a6ed48962343cea0d89f495fef39125f45d717e7edf126\",\"license\":\"MIT\"},\"src/drops/library/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nlibrary Strings {\\n  bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n   */\\n  function toString(uint256 value) internal pure returns (string memory) {\\n    // Inspired by OraclizeAPI's implementation - MIT licence\\n    // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n    if (value == 0) {\\n      return \\\"0\\\";\\n    }\\n    uint256 temp = value;\\n    uint256 digits;\\n    while (temp != 0) {\\n      digits++;\\n      temp /= 10;\\n    }\\n    bytes memory buffer = new bytes(digits);\\n    while (value != 0) {\\n      digits -= 1;\\n      buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n      value /= 10;\\n    }\\n    return string(buffer);\\n  }\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n   */\\n  function toHexString(uint256 value) internal pure returns (string memory) {\\n    if (value == 0) {\\n      return \\\"0x00\\\";\\n    }\\n    uint256 temp = value;\\n    uint256 length = 0;\\n    while (temp != 0) {\\n      length++;\\n      temp >>= 8;\\n    }\\n    return toHexString(value, length);\\n  }\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n   */\\n  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n    bytes memory buffer = new bytes(2 * length + 2);\\n    buffer[0] = \\\"0\\\";\\n    buffer[1] = \\\"x\\\";\\n    for (uint256 i = 2 * length + 1; i > 1; --i) {\\n      buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n      value >>= 4;\\n    }\\n    require(value == 0, \\\"Strings: hex length insufficient\\\");\\n    return string(buffer);\\n  }\\n}\\n\",\"keccak256\":\"0x797c7fcb3b64e00a7cb97aed064b3e09741e90ddd8af13d11368906416ea2196\",\"license\":\"MIT\"},\"src/drops/struct/AddressMintDetails.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\n/// @notice Return type of specific mint counts and details per address\\nstruct AddressMintDetails {\\n  /// Number of total mints from the given address\\n  uint256 totalMints;\\n  /// Number of presale mints from the given address\\n  uint256 presaleMints;\\n  /// Number of public mints from the given address\\n  uint256 publicMints;\\n}\\n\",\"keccak256\":\"0xb89be69f1678c6c14fd2e1372654478a3f27fcfbe66b22e40a4397122f6ac39c\",\"license\":\"MIT\"},\"src/interface/CollectionURI.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\ninterface CollectionURI {\\n  function contractURI() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x624ed63d87fedf9302e4cc6a9377b5c66c635522c30f9de7d4b9900093576451\",\"license\":\"UNLICENSED\"},\"src/interface/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.13;\\n\\ninterface ERC165 {\\n  /// @notice Query if a contract implements an interface\\n  /// @param interfaceID The interface identifier, as specified in ERC-165\\n  /// @dev Interface identification is specified in ERC-165. This function\\n  ///  uses less than 30,000 gas.\\n  /// @return `true` if the contract implements `interfaceID` and\\n  ///  `interfaceID` is not 0xffffffff, `false` otherwise\\n  function supportsInterface(bytes4 interfaceID) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0eb8ee08f9122fc959486120d5e9cfa1a9e9a6b4ccb117766988ed5a26168cf3\",\"license\":\"UNLICENSED\"},\"src/interface/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.13;\\n\\n/// @title ERC-721 Non-Fungible Token Standard\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\\n/* is ERC165 */\\ninterface ERC721 {\\n  /// @dev This emits when ownership of any NFT changes by any mechanism.\\n  ///  This event emits when NFTs are created (`from` == 0) and destroyed\\n  ///  (`to` == 0). Exception: during contract creation, any number of NFTs\\n  ///  may be created and assigned without emitting Transfer. At the time of\\n  ///  any transfer, the approved address for that NFT (if any) is reset to none.\\n  event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\\n\\n  /// @dev This emits when the approved address for an NFT is changed or\\n  ///  reaffirmed. The zero address indicates there is no approved address.\\n  ///  When a Transfer event emits, this also indicates that the approved\\n  ///  address for that NFT (if any) is reset to none.\\n  event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\\n\\n  /// @dev This emits when an operator is enabled or disabled for an owner.\\n  ///  The operator can manage all NFTs of the owner.\\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\\n\\n  /// @notice Count all NFTs assigned to an owner\\n  /// @dev NFTs assigned to the zero address are considered invalid, and this\\n  ///  function throws for queries about the zero address.\\n  /// @param _owner An address for whom to query the balance\\n  /// @return The number of NFTs owned by `_owner`, possibly zero\\n  function balanceOf(address _owner) external view returns (uint256);\\n\\n  /// @notice Find the owner of an NFT\\n  /// @dev NFTs assigned to zero address are considered invalid, and queries\\n  ///  about them do throw.\\n  /// @param _tokenId The identifier for an NFT\\n  /// @return The address of the owner of the NFT\\n  function ownerOf(uint256 _tokenId) external view returns (address);\\n\\n  /// @notice Transfers the ownership of an NFT from one address to another address\\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\\n  ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\\n  ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\\n  ///  `onERC721Received` on `_to` and throws if the return value is not\\n  ///  `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`.\\n  /// @param _from The current owner of the NFT\\n  /// @param _to The new owner\\n  /// @param _tokenId The NFT to transfer\\n  /// @param data Additional data with no specified format, sent in call to `_to`\\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata data) external payable;\\n\\n  /// @notice Transfers the ownership of an NFT from one address to another address\\n  /// @dev This works identically to the other function with an extra data parameter,\\n  ///  except this function just sets data to \\\"\\\".\\n  /// @param _from The current owner of the NFT\\n  /// @param _to The new owner\\n  /// @param _tokenId The NFT to transfer\\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\\n\\n  /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\\n  ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\\n  ///  THEY MAY BE PERMANENTLY LOST\\n  /// @dev Throws unless `msg.sender` is the current owner, an authorized\\n  ///  operator, or the approved address for this NFT. Throws if `_from` is\\n  ///  not the current owner. Throws if `_to` is the zero address. Throws if\\n  ///  `_tokenId` is not a valid NFT.\\n  /// @param _from The current owner of the NFT\\n  /// @param _to The new owner\\n  /// @param _tokenId The NFT to transfer\\n  function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\\n\\n  /// @notice Change or reaffirm the approved address for an NFT\\n  /// @dev The zero address indicates there is no approved address.\\n  ///  Throws unless `msg.sender` is the current NFT owner, or an authorized\\n  ///  operator of the current owner.\\n  /// @param _approved The new approved NFT controller\\n  /// @param _tokenId The NFT to approve\\n  function approve(address _approved, uint256 _tokenId) external payable;\\n\\n  /// @notice Enable or disable approval for a third party (\\\"operator\\\") to manage\\n  ///  all of `msg.sender`'s assets\\n  /// @dev Emits the ApprovalForAll event. The contract MUST allow\\n  ///  multiple operators per owner.\\n  /// @param _operator Address to add to the set of authorized operators\\n  /// @param _approved True if the operator is approved, false to revoke approval\\n  function setApprovalForAll(address _operator, bool _approved) external;\\n\\n  /// @notice Get the approved address for a single NFT\\n  /// @dev Throws if `_tokenId` is not a valid NFT.\\n  /// @param _tokenId The NFT to find the approved address for\\n  /// @return The approved address for this NFT, or the zero address if there is none\\n  function getApproved(uint256 _tokenId) external view returns (address);\\n\\n  /// @notice Query if an address is an authorized operator for another address\\n  /// @param _owner The address that owns the NFTs\\n  /// @param _operator The address that acts on behalf of the owner\\n  /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x48c527ea49adbd1d036c8f84c6a0b8b27993532cfcfd3dc256098c3e07158db3\",\"license\":\"UNLICENSED\"},\"src/interface/ERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.13;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\\n/* is ERC721 */\\ninterface ERC721Enumerable {\\n  /// @notice Count NFTs tracked by this contract\\n  /// @return A count of valid NFTs tracked by this contract, where each one of\\n  ///  them has an assigned and queryable owner not equal to the zero address\\n  function totalSupply() external view returns (uint256);\\n\\n  /// @notice Enumerate valid NFTs\\n  /// @dev Throws if `_index` >= `totalSupply()`.\\n  /// @param _index A counter less than `totalSupply()`\\n  /// @return The token identifier for the `_index`th NFT,\\n  ///  (sort order not specified)\\n  function tokenByIndex(uint256 _index) external view returns (uint256);\\n\\n  /// @notice Enumerate NFTs assigned to an owner\\n  /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\\n  ///  `_owner` is the zero address, representing invalid NFTs.\\n  /// @param _owner An address where we are interested in NFTs owned by them\\n  /// @param _index A counter less than `balanceOf(_owner)`\\n  /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\\n  ///   (sort order not specified)\\n  function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xcfa65ca5cedbf9a1ae141c138453493d3b46271f8e9ebbc0876efd73203c17b3\",\"license\":\"UNLICENSED\"},\"src/interface/ERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.13;\\n\\n/// @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\\n///  Note: the ERC-165 identifier for this interface is 0x5b5e139f.\\n/* is ERC721 */\\ninterface ERC721Metadata {\\n  /// @notice A descriptive name for a collection of NFTs in this contract\\n  function name() external view returns (string memory _name);\\n\\n  /// @notice An abbreviated name for NFTs in this contract\\n  function symbol() external view returns (string memory _symbol);\\n\\n  /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\\n  /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\\n  ///  3986. The URI may point to a JSON file that conforms to the \\\"ERC721\\n  ///  Metadata JSON Schema\\\".\\n  function tokenURI(uint256 _tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x49b486151661f6d979084a25162ffae7e61b91568491bc5641aad2fdace62f9b\",\"license\":\"UNLICENSED\"},\"src/interface/ERC721TokenReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\n/// @dev Note: the ERC-165 identifier for this interface is 0x150b7a02.\\ninterface ERC721TokenReceiver {\\n  /// @notice Handle the receipt of an NFT\\n  /// @dev The ERC721 smart contract calls this function on the recipient\\n  ///  after a `transfer`. This function MAY throw to revert and reject the\\n  ///  transfer. Return of other than the magic value MUST result in the\\n  ///  transaction being reverted.\\n  ///  Note: the contract address is always the message sender.\\n  /// @param _operator The address which called `safeTransferFrom` function\\n  /// @param _from The address which previously owned the token\\n  /// @param _tokenId The NFT identifier which is being transferred\\n  /// @param _data Additional data with no specified format\\n  /// @return `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n  ///  unless throwing\\n  function onERC721Received(\\n    address _operator,\\n    address _from,\\n    uint256 _tokenId,\\n    bytes calldata _data\\n  ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xb5e53cf38b4d0fcb904fa69cb925946c06cddf1cd65e4ce038e05b4bfb48bcb3\",\"license\":\"UNLICENSED\"},\"src/interface/HolographERC721Interface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\nimport \\\"./CollectionURI.sol\\\";\\nimport \\\"./ERC165.sol\\\";\\nimport \\\"./ERC721.sol\\\";\\nimport \\\"./ERC721Enumerable.sol\\\";\\nimport \\\"./ERC721Metadata.sol\\\";\\nimport \\\"./ERC721TokenReceiver.sol\\\";\\nimport \\\"./Holographable.sol\\\";\\n\\ninterface HolographERC721Interface is\\n  ERC165,\\n  ERC721,\\n  ERC721Enumerable,\\n  ERC721Metadata,\\n  ERC721TokenReceiver,\\n  CollectionURI,\\n  Holographable\\n{\\n  function approve(address to, uint256 tokenId) external payable;\\n\\n  function burn(uint256 tokenId) external;\\n\\n  function safeTransferFrom(address from, address to, uint256 tokenId) external payable;\\n\\n  function setApprovalForAll(address to, bool approved) external;\\n\\n  function sourceBurn(uint256 tokenId) external;\\n\\n  function sourceMint(address to, uint224 tokenId) external;\\n\\n  function sourceGetChainPrepend() external view returns (uint256);\\n\\n  function sourceTransfer(address to, uint256 tokenId) external;\\n\\n  function sourceExternalCall(address target, bytes calldata data) external;\\n\\n  function transfer(address to, uint256 tokenId) external payable;\\n\\n  function contractURI() external view returns (string memory);\\n\\n  function getApproved(uint256 tokenId) external view returns (address);\\n\\n  function isApprovedForAll(address wallet, address operator) external view returns (bool);\\n\\n  function name() external view returns (string memory);\\n\\n  function burned(uint256 tokenId) external view returns (bool);\\n\\n  function decimals() external pure returns (uint256);\\n\\n  function exists(uint256 tokenId) external view returns (bool);\\n\\n  function ownerOf(uint256 tokenId) external view returns (address);\\n\\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n\\n  function symbol() external view returns (string memory);\\n\\n  function tokenByIndex(uint256 index) external view returns (uint256);\\n\\n  function tokenOfOwnerByIndex(address wallet, uint256 index) external view returns (uint256);\\n\\n  function tokensOfOwner(address wallet) external view returns (uint256[] memory);\\n\\n  function tokenURI(uint256 tokenId) external view returns (string memory);\\n\\n  function totalSupply() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x6b4edfaf8670db09a234b17cfd7d1ca5eb46708464d650ad53203d23012e836d\",\"license\":\"UNLICENSED\"},\"src/interface/HolographInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @title Holograph Protocol\\n * @author https://github.com/holographxyz\\n * @notice This is the primary Holograph Protocol smart contract\\n * @dev This contract stores a reference to all the primary modules and variables of the protocol\\n */\\ninterface HolographInterface {\\n  /**\\n   * @notice Get the address of the Holograph Bridge module\\n   * @dev Used for beaming holographable assets cross-chain\\n   */\\n  function getBridge() external view returns (address bridge);\\n\\n  /**\\n   * @notice Update the Holograph Bridge module address\\n   * @param bridge address of the Holograph Bridge smart contract to use\\n   */\\n  function setBridge(address bridge) external;\\n\\n  /**\\n   * @notice Get the chain ID that the Protocol was deployed on\\n   * @dev Useful for checking if/when a hard fork occurs\\n   */\\n  function getChainId() external view returns (uint256 chainId);\\n\\n  /**\\n   * @notice Update the chain ID\\n   * @dev Useful for updating once a hard fork has been mitigated\\n   * @param chainId EVM chain ID to use\\n   */\\n  function setChainId(uint256 chainId) external;\\n\\n  /**\\n   * @notice Get the address of the Holograph Factory module\\n   * @dev Used for deploying holographable smart contracts\\n   */\\n  function getFactory() external view returns (address factory);\\n\\n  /**\\n   * @notice Update the Holograph Factory module address\\n   * @param factory address of the Holograph Factory smart contract to use\\n   */\\n  function setFactory(address factory) external;\\n\\n  /**\\n   * @notice Get the Holograph chain Id\\n   * @dev Holograph uses an internal chain id mapping\\n   */\\n  function getHolographChainId() external view returns (uint32 holographChainId);\\n\\n  /**\\n   * @notice Update the Holograph chain ID\\n   * @dev Useful for updating once a hard fork was mitigated\\n   * @param holographChainId Holograph chain ID to use\\n   */\\n  function setHolographChainId(uint32 holographChainId) external;\\n\\n  /**\\n   * @notice Get the address of the Holograph Interfaces module\\n   * @dev Holograph uses this contract to store data that needs to be accessed by a large portion of the modules\\n   */\\n  function getInterfaces() external view returns (address interfaces);\\n\\n  /**\\n   * @notice Update the Holograph Interfaces module address\\n   * @param interfaces address of the Holograph Interfaces smart contract to use\\n   */\\n  function setInterfaces(address interfaces) external;\\n\\n  /**\\n   * @notice Get the address of the Holograph Operator module\\n   * @dev All cross-chain Holograph Bridge beams are handled by the Holograph Operator module\\n   */\\n  function getOperator() external view returns (address operator);\\n\\n  /**\\n   * @notice Update the Holograph Operator module address\\n   * @param operator address of the Holograph Operator smart contract to use\\n   */\\n  function setOperator(address operator) external;\\n\\n  /**\\n   * @notice Get the Holograph Registry module\\n   * @dev This module stores a reference for all deployed holographable smart contracts\\n   */\\n  function getRegistry() external view returns (address registry);\\n\\n  /**\\n   * @notice Update the Holograph Registry module address\\n   * @param registry address of the Holograph Registry smart contract to use\\n   */\\n  function setRegistry(address registry) external;\\n\\n  /**\\n   * @notice Get the Holograph Treasury module\\n   * @dev All of the Holograph Protocol assets are stored and managed by this module\\n   */\\n  function getTreasury() external view returns (address treasury);\\n\\n  /**\\n   * @notice Update the Holograph Treasury module address\\n   * @param treasury address of the Holograph Treasury smart contract to use\\n   */\\n  function setTreasury(address treasury) external;\\n\\n  /**\\n   * @notice Get the Holograph Utility Token address\\n   * @dev This is the official utility token of the Holograph Protocol\\n   */\\n  function getUtilityToken() external view returns (address utilityToken);\\n\\n  /**\\n   * @notice Update the Holograph Utility Token address\\n   * @param utilityToken address of the Holograph Utility Token smart contract to use\\n   */\\n  function setUtilityToken(address utilityToken) external;\\n}\\n\",\"keccak256\":\"0x90b5643e77e914393c508d59b80f5739debfd72455029c0db041f92374b3f586\",\"license\":\"UNLICENSED\"},\"src/interface/HolographTreasuryInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\ninterface HolographTreasuryInterface {\\n  /**\\n   * @notice Update the Holograph Mint Fee\\n   * @param fee new fee to charge for minting holographable assets\\n   */\\n  function setHolographMintFee(uint256 fee) external;\\n\\n  /**\\n   * @notice Withdraws native tokens from the contract\\n   * @dev Can only be called by the admin\\n   */\\n  function withdraw() external;\\n\\n  /**\\n   * @notice Withdraws native tokens from the contract to a specified address\\n   * @dev Can only be called by the admin\\n   * @param recipient The address to send the withdrawn funds to\\n   */\\n  function withdrawTo(address payable recipient) external;\\n\\n  /**\\n   * @notice Get the Holograph Mint Fee\\n   * @dev This fee is charged to mint holographable assets\\n   * @return The current holograph mint fee\\n   */\\n  function getHolographMintFee() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xafb7728c98a16fa76a140ef5f6ace826859f59d747a1dd15b141d585728ab42a\",\"license\":\"UNLICENSED\"},\"src/interface/Holographable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\ninterface Holographable {\\n  function bridgeIn(uint32 fromChain, bytes calldata payload) external returns (bytes4);\\n\\n  function bridgeOut(\\n    uint32 toChain,\\n    address sender,\\n    bytes calldata payload\\n  ) external returns (bytes4 selector, bytes memory data);\\n}\\n\",\"keccak256\":\"0x4dd2fc1af269273c46156df8af5cedeed0dfb83f0bfa5696a8d64c768449285b\",\"license\":\"UNLICENSED\"},\"src/interface/HolographerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\ninterface HolographerInterface {\\n  function getContractType() external view returns (bytes32 contractType);\\n\\n  function getDeploymentBlock() external view returns (uint256 deploymentBlock);\\n\\n  function getHolograph() external view returns (address holograph);\\n\\n  function getHolographEnforcer() external view returns (address);\\n\\n  function getOriginChain() external view returns (uint32 originChain);\\n\\n  function getSourceContract() external view returns (address sourceContract);\\n}\\n\",\"keccak256\":\"0x4274b9180266275a8df16b8e1f0956cc795fb1ab87db1c01264c343be3bea937\",\"license\":\"UNLICENSED\"},\"src/interface/IContractMetadata.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.0;\\n\\n/// @author thirdweb\\n\\n/**\\n *  Thirdweb's `ContractMetadata` is a contract extension for any base contracts. It lets you set a metadata URI\\n *  for you contract.\\n *\\n *  Additionally, `ContractMetadata` is necessary for NFT contracts that want royalties to get distributed on OpenSea.\\n */\\n\\ninterface IContractMetadata {\\n  /// @dev Returns the metadata URI of the contract.\\n  function contractURI() external view returns (string memory);\\n\\n  /**\\n   *  @dev Sets contract URI for the storefront-level metadata of the contract.\\n   *       Only module admin can call this function.\\n   */\\n  function setContractURI(string calldata _uri) external;\\n\\n  /// @dev Emitted when the contract URI is updated.\\n  event ContractURIUpdated(string prevURI, string newURI);\\n}\\n\",\"keccak256\":\"0x12cfd0d557829c930cb2ec52c31eda74887aac8cc9c312d23f85c2dfa4416386\",\"license\":\"Apache-2.0\"},\"src/interface/ICustomERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport {AddressMintDetails} from \\\"../drops/struct/AddressMintDetails.sol\\\";\\nimport {CustomERC721SaleDetails} from \\\"src/struct/CustomERC721SaleDetails.sol\\\";\\n\\n/// @notice Interface for HOLOGRAPH Drops contract\\ninterface ICustomERC721 {\\n  // Access errors\\n  /// @notice Only admin can access this function\\n  error Access_OnlyAdmin();\\n  /// @notice Only minter can access this function\\n  error Access_OnlyMinter();\\n  /// @notice Missing the given role or admin access\\n  error Access_MissingRoleOrAdmin(bytes32 role);\\n  /// @notice Withdraw is not allowed by this user\\n  error Access_WithdrawNotAllowed();\\n  /// @notice Cannot withdraw funds due to ETH send failure.\\n  error Withdraw_FundsSendFailure();\\n  /// @notice Mint fee send failure\\n  error MintFee_FundsSendFailure();\\n  /// @notice Lazy mint initialization failed\\n  error LazyMint_AlreadyInitialized();\\n  /// @notice Contract is not initialized yet\\n  error NotInitialized();\\n\\n  /// @notice Call to external metadata renderer failed.\\n  error ExternalMetadataRenderer_CallFailed();\\n\\n  // Sale/Purchase errors\\n  /// @notice Sale is inactive\\n  error Sale_Inactive();\\n  /// @notice Wrong price for purchase\\n  error Purchase_WrongPrice(uint256 correctPrice);\\n  /// @notice NFT sold out\\n  error Mint_SoldOut();\\n  /// @notice Too many purchase for address\\n  error Purchase_TooManyForAddress();\\n  /// @notice Fee payout failed\\n  error FeePaymentFailed();\\n  /// @notice The countdown has been completed\\n  error Purchase_CountdownCompleted();\\n\\n  // Init errors\\n  error CountdownEndMustBeDivisibleByMintTimeCost(uint128 countdownEnd, uint128 mintTimeCost);\\n\\n  // Admin errors\\n  /// @notice Royalty percentage too high\\n  error Setup_RoyaltyPercentageTooHigh(uint16 maxRoyaltyBPS);\\n  /// @notice Invalid admin upgrade address\\n  error Admin_InvalidUpgradeAddress(address proposedAddress);\\n  /// @notice Unable to finalize an edition not marked as open (size set to uint64_max_value)\\n  error Admin_UnableToFinalizeNotOpenEdition();\\n\\n  /// @notice Event emitted for mint fee payout\\n  /// @param mintFeeAmount amount of the mint fee\\n  /// @param mintFeeRecipient recipient of the mint fee\\n  /// @param success if the payout succeeded\\n  event MintFeePayout(uint256 mintFeeAmount, address mintFeeRecipient, bool success);\\n\\n  /// @notice Event emitted for each sale\\n  /// @param to address sale was made to\\n  /// @param quantity quantity of the minted nfts\\n  /// @param pricePerToken price for each token\\n  /// @param firstPurchasedTokenId first purchased token ID (to get range add to quantity for max)\\n  event Sale(\\n    address indexed to,\\n    uint256 indexed quantity,\\n    uint256 indexed pricePerToken,\\n    uint256 firstPurchasedTokenId\\n  );\\n\\n  /// @notice Sales configuration has been changed\\n  /// @dev To access new sales configuration, use getter function.\\n  /// @param changedBy Changed by user\\n  event SalesConfigChanged(address indexed changedBy);\\n\\n  /// @notice Event emitted when the funds recipient is changed\\n  /// @param newAddress new address for the funds recipient\\n  /// @param changedBy address that the recipient is changed by\\n  event FundsRecipientChanged(address indexed newAddress, address indexed changedBy);\\n\\n  /// @notice Event emitted when the funds are withdrawn from the minting contract\\n  /// @param withdrawnBy address that issued the withdraw\\n  /// @param withdrawnTo address that the funds were withdrawn to\\n  /// @param amount amount that was withdrawn\\n  event FundsWithdrawn(address indexed withdrawnBy, address indexed withdrawnTo, uint256 amount);\\n\\n  /// @notice Event emitted when an open mint is finalized and further minting is closed forever on the contract.\\n  /// @param sender address sending close mint\\n  /// @param numberOfMints number of mints the contract is finalized at\\n  event OpenMintFinalized(address indexed sender, uint256 numberOfMints);\\n\\n  /// @notice Event emitted when an nfs is minted\\n  /// @param recipient address that the nft was minted to\\n  /// @param tokenId id of the minted nft\\n  /// @param id id of the minted nft with chain id prefix\\n  event NFTMinted(address indexed recipient, uint256 indexed tokenId, uint256 id);\\n\\n  /// @notice Getter for the sale start date\\n  function START_DATE() external view returns (uint256);\\n\\n  /// @notice Getter for the initial max supply\\n  function INITIAL_MAX_SUPPLY() external view returns (uint256);\\n\\n  /// @notice Getter for the mint interval\\n  function MINT_INTERVAL() external view returns (uint256);\\n\\n  /// @notice Getter for the minter role\\n  function minter() external view returns (address);\\n\\n  /// @notice Admin function to update the sales configuration settings\\n  /// @param publicSalePrice public sale price in ether\\n  /// @param maxSalePurchasePerAddress Max # of purchases (public) per address allowed\\n  function setSaleConfiguration(uint104 publicSalePrice, uint24 maxSalePurchasePerAddress) external;\\n\\n  /// @notice External purchase function (payable in eth)\\n  /// @param quantity to purchase\\n  /// @return first minted token ID\\n  function purchase(uint256 quantity) external payable returns (uint256);\\n\\n  /// @notice Function to return the global sales details for the given drop\\n  function saleDetails() external view returns (CustomERC721SaleDetails memory);\\n\\n  /// @notice Function to return the current max supply\\n  function currentTheoricalMaxSupply() external view returns (uint256);\\n\\n  /// @notice Function to return the specific sales details for a given address\\n  /// @param minter address for minter to return mint information for\\n  function mintedPerAddress(address minter) external view returns (AddressMintDetails memory);\\n\\n  /// @notice This is the opensea/public owner setting that can be set by the contract admin\\n  function owner() external view returns (address);\\n\\n  /// @dev Getter for admin role associated with the contract to handle metadata\\n  /// @return boolean if address is admin\\n  function isAdmin(address user) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2eb03bc465d8d2557e3b6c18b24d3cc8dea12994dd5216110784fe357521298d\",\"license\":\"MIT\"},\"src/interface/InitializableInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n/*\\n\\n                         \\u250c\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2510\\n                         \\u2502 HOLOGRAPH \\u2502\\n                         \\u2514\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2518\\n\\u2554\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2557\\n\\u2551                                                             \\u2551\\n\\u2551                            / ^ \\\\                            \\u2551\\n\\u2551                            ~~*~~            \\u00b8               \\u2551\\n\\u2551                         [ '<>:<>' ]         \\u2502\\u2591\\u2591\\u2591            \\u2551\\n\\u2551               \\u2554\\u2557           _/\\\"\\\\_           \\u2554\\u2563               \\u2551\\n\\u2551             \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510          \\\"\\\"\\\"          \\u250c\\u2500\\u256c\\u256c\\u2500\\u2510             \\u2551\\n\\u2551          \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510       \\\\_/       \\u250c\\u2500\\u252c\\u2518 \\u2560\\u2563 \\u2514\\u252c\\u2500\\u2510          \\u2551\\n\\u2551       \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510           \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2560\\u2563  \\u2502 \\u2514\\u252c\\u2500\\u2510       \\u2551\\n\\u2551    \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510     \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510    \\u2551\\n\\u2551 \\u250c\\u2500\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2510 \\u250c\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2500\\u2510 \\u2551\\n\\u2560\\u252c\\u2518 \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502\\u2514\\u00a4\\u2518\\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502 \\u2514\\u252c\\u2563\\n\\u2551\\u2502  \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502   \\u2502  \\u2502  \\u2502  \\u2502  \\u2560\\u2563  \\u2502  \\u2502  \\u2502  \\u2502  \\u2502\\u2551\\n\\u2560\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u256c\\u256c\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2550\\u2550\\u2569\\u2563\\n\\u2560\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u256c\\u256c\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2534\\u2563\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551               \\u2560\\u2563                           \\u2560\\u2563               \\u2551\\n\\u2551    ,          \\u2560\\u2563     ,        ,'      *    \\u2560\\u2563               \\u2551\\n\\u2551~~~~~^~~~~~~~~\\u250c\\u256c\\u256c\\u2510~~~^~~~~~~~~^^~~~~~~~~^~~\\u250c\\u256c\\u256c\\u2510~~~~~~~^~~~~~~\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2569\\u2569\\u2569\\u2569\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\n     - one protocol, one bridge = infinite possibilities -\\n\\n\\n ***************************************************************\\n\\n DISCLAIMER: U.S Patent Pending\\n\\n LICENSE: Holograph Limited Public License (H-LPL)\\n\\n https://holograph.xyz/licenses/h-lpl/1.0.0\\n\\n This license governs use of the accompanying software. If you\\n use the software, you accept this license. If you do not accept\\n the license, you are not permitted to use the software.\\n\\n 1. Definitions\\n\\n The terms \\\"reproduce,\\\" \\\"reproduction,\\\" \\\"derivative works,\\\" and\\n \\\"distribution\\\" have the same meaning here as under U.S.\\n copyright law. A \\\"contribution\\\" is the original software, or\\n any additions or changes to the software. A \\\"contributor\\\" is\\n any person that distributes its contribution under this\\n license. \\\"Licensed patents\\\" are a contributor\\u2019s patent claims\\n that read directly on its contribution.\\n\\n 2. Grant of Rights\\n\\n A) Copyright Grant- Subject to the terms of this license,\\n including the license conditions and limitations in sections 3\\n and 4, each contributor grants you a non-exclusive, worldwide,\\n royalty-free copyright license to reproduce its contribution,\\n prepare derivative works of its contribution, and distribute\\n its contribution or any derivative works that you create.\\n B) Patent Grant- Subject to the terms of this license,\\n including the license conditions and limitations in section 3,\\n each contributor grants you a non-exclusive, worldwide,\\n royalty-free license under its licensed patents to make, have\\n made, use, sell, offer for sale, import, and/or otherwise\\n dispose of its contribution in the software or derivative works\\n of the contribution in the software.\\n\\n 3. Conditions and Limitations\\n\\n A) No Trademark License- This license does not grant you rights\\n to use any contributors\\u2019 name, logo, or trademarks.\\n B) If you bring a patent claim against any contributor over\\n patents that you claim are infringed by the software, your\\n patent license from such contributor is terminated with\\n immediate effect.\\n C) If you distribute any portion of the software, you must\\n retain all copyright, patent, trademark, and attribution\\n notices that are present in the software.\\n D) If you distribute any portion of the software in source code\\n form, you may do so only under this license by including a\\n complete copy of this license with your distribution. If you\\n distribute any portion of the software in compiled or object\\n code form, you may only do so under a license that complies\\n with this license.\\n E) The software is licensed \\u201cas-is.\\u201d You bear all risks of\\n using it. The contributors give no express warranties,\\n guarantees, or conditions. You may have additional consumer\\n rights under your local laws which this license cannot change.\\n To the extent permitted under your local laws, the contributors\\n exclude all implied warranties, including those of\\n merchantability, fitness for a particular purpose and\\n non-infringement.\\n\\n 4. (F) Platform Limitation- The licenses granted in sections\\n 2.A & 2.B extend only to the software or derivative works that\\n you create that run on a Holograph system product.\\n\\n ***************************************************************\\n\\n*/\\n\\npragma solidity 0.8.13;\\n\\n/**\\n * @title Initializable\\n * @author https://github.com/holographxyz\\n * @notice Use init instead of constructor\\n * @dev This allows for use of init function to make one time initializations without the need of a constructor\\n */\\ninterface InitializableInterface {\\n  /**\\n   * @notice Used internally to initialize the contract instead of through a constructor\\n   * @dev This function is called by the deployer/factory when creating a contract\\n   * @param initPayload abi encoded payload to use for contract initilaization\\n   */\\n  function init(bytes memory initPayload) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x0a76fae986c5c18110ce2b1818c84ec28b7bf7f8fb00d20b39b8d7225fbd892d\",\"license\":\"UNLICENSED\"},\"src/library/NFTMetadataRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport {MetadataParams} from \\\"../struct/MetadataParams.sol\\\";\\n\\nlibrary Math {\\n  enum Rounding {\\n    Down, // Toward negative infinity\\n    Up, // Toward infinity\\n    Zero // Toward zero\\n  }\\n\\n  /**\\n   * @dev Returns the largest of two numbers.\\n   */\\n  function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a > b ? a : b;\\n  }\\n\\n  /**\\n   * @dev Returns the smallest of two numbers.\\n   */\\n  function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n    return a < b ? a : b;\\n  }\\n\\n  /**\\n   * @dev Returns the average of two numbers. The result is rounded towards\\n   * zero.\\n   */\\n  function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // (a + b) / 2 can overflow.\\n    return (a & b) + (a ^ b) / 2;\\n  }\\n\\n  /**\\n   * @dev Returns the ceiling of the division of two numbers.\\n   *\\n   * This differs from standard division with `/` in that it rounds up instead\\n   * of rounding down.\\n   */\\n  function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n    // (a + b - 1) / b can overflow on addition, so we distribute.\\n    return a == 0 ? 0 : (a - 1) / b + 1;\\n  }\\n\\n  /**\\n   * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n   * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n   * with further edits by Uniswap Labs also under MIT license.\\n   */\\n  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n    unchecked {\\n      // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n      // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n      // variables such that product = prod1 * 2^256 + prod0.\\n      uint256 prod0; // Least significant 256 bits of the product\\n      uint256 prod1; // Most significant 256 bits of the product\\n      assembly {\\n        let mm := mulmod(x, y, not(0))\\n        prod0 := mul(x, y)\\n        prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n      }\\n\\n      // Handle non-overflow cases, 256 by 256 division.\\n      if (prod1 == 0) {\\n        return prod0 / denominator;\\n      }\\n\\n      // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n      require(denominator > prod1);\\n\\n      ///////////////////////////////////////////////\\n      // 512 by 256 division.\\n      ///////////////////////////////////////////////\\n\\n      // Make division exact by subtracting the remainder from [prod1 prod0].\\n      uint256 remainder;\\n      assembly {\\n        // Compute remainder using mulmod.\\n        remainder := mulmod(x, y, denominator)\\n\\n        // Subtract 256 bit number from 512 bit number.\\n        prod1 := sub(prod1, gt(remainder, prod0))\\n        prod0 := sub(prod0, remainder)\\n      }\\n\\n      // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n      // See https://cs.stackexchange.com/q/138556/92363.\\n\\n      // Does not overflow because the denominator cannot be zero at this stage in the function.\\n      uint256 twos = denominator & (~denominator + 1);\\n      assembly {\\n        // Divide denominator by twos.\\n        denominator := div(denominator, twos)\\n\\n        // Divide [prod1 prod0] by twos.\\n        prod0 := div(prod0, twos)\\n\\n        // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n        twos := add(div(sub(0, twos), twos), 1)\\n      }\\n\\n      // Shift in bits from prod1 into prod0.\\n      prod0 |= prod1 * twos;\\n\\n      // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n      // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n      // four bits. That is, denominator * inv = 1 mod 2^4.\\n      uint256 inverse = (3 * denominator) ^ 2;\\n\\n      // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n      // in modular arithmetic, doubling the correct bits in each step.\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n      inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n      // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n      // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n      // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n      // is no longer required.\\n      result = prod0 * inverse;\\n      return result;\\n    }\\n  }\\n\\n  /**\\n   * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n   */\\n  function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n    uint256 result = mulDiv(x, y, denominator);\\n    if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n      result += 1;\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n   *\\n   * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n   */\\n  function sqrt(uint256 a) internal pure returns (uint256) {\\n    if (a == 0) {\\n      return 0;\\n    }\\n\\n    // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n    //\\n    // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n    // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n    //\\n    // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n    // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n    // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n    //\\n    // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n    uint256 result = 1 << (log2(a) >> 1);\\n\\n    // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n    // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n    // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n    // into the expected uint128 result.\\n    unchecked {\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      result = (result + a / result) >> 1;\\n      return min(result, a / result);\\n    }\\n  }\\n\\n  /**\\n   * @notice Calculates sqrt(a), following the selected rounding direction.\\n   */\\n  function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 result = sqrt(a);\\n      return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n    }\\n  }\\n\\n  /**\\n   * @dev Return the log in base 2, rounded down, of a positive value.\\n   * Returns 0 if given 0.\\n   */\\n  function log2(uint256 value) internal pure returns (uint256) {\\n    uint256 result = 0;\\n    unchecked {\\n      if (value >> 128 > 0) {\\n        value >>= 128;\\n        result += 128;\\n      }\\n      if (value >> 64 > 0) {\\n        value >>= 64;\\n        result += 64;\\n      }\\n      if (value >> 32 > 0) {\\n        value >>= 32;\\n        result += 32;\\n      }\\n      if (value >> 16 > 0) {\\n        value >>= 16;\\n        result += 16;\\n      }\\n      if (value >> 8 > 0) {\\n        value >>= 8;\\n        result += 8;\\n      }\\n      if (value >> 4 > 0) {\\n        value >>= 4;\\n        result += 4;\\n      }\\n      if (value >> 2 > 0) {\\n        value >>= 2;\\n        result += 2;\\n      }\\n      if (value >> 1 > 0) {\\n        result += 1;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n   * Returns 0 if given 0.\\n   */\\n  function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 result = log2(value);\\n      return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n    }\\n  }\\n\\n  /**\\n   * @dev Return the log in base 10, rounded down, of a positive value.\\n   * Returns 0 if given 0.\\n   */\\n  function log10(uint256 value) internal pure returns (uint256) {\\n    uint256 result = 0;\\n    unchecked {\\n      if (value >= 10 ** 64) {\\n        value /= 10 ** 64;\\n        result += 64;\\n      }\\n      if (value >= 10 ** 32) {\\n        value /= 10 ** 32;\\n        result += 32;\\n      }\\n      if (value >= 10 ** 16) {\\n        value /= 10 ** 16;\\n        result += 16;\\n      }\\n      if (value >= 10 ** 8) {\\n        value /= 10 ** 8;\\n        result += 8;\\n      }\\n      if (value >= 10 ** 4) {\\n        value /= 10 ** 4;\\n        result += 4;\\n      }\\n      if (value >= 10 ** 2) {\\n        value /= 10 ** 2;\\n        result += 2;\\n      }\\n      if (value >= 10 ** 1) {\\n        result += 1;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n   * Returns 0 if given 0.\\n   */\\n  function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 result = log10(value);\\n      return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n    }\\n  }\\n\\n  /**\\n   * @dev Return the log in base 256, rounded down, of a positive value.\\n   * Returns 0 if given 0.\\n   *\\n   * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n   */\\n  function log256(uint256 value) internal pure returns (uint256) {\\n    uint256 result = 0;\\n    unchecked {\\n      if (value >> 128 > 0) {\\n        value >>= 128;\\n        result += 16;\\n      }\\n      if (value >> 64 > 0) {\\n        value >>= 64;\\n        result += 8;\\n      }\\n      if (value >> 32 > 0) {\\n        value >>= 32;\\n        result += 4;\\n      }\\n      if (value >> 16 > 0) {\\n        value >>= 16;\\n        result += 2;\\n      }\\n      if (value >> 8 > 0) {\\n        result += 1;\\n      }\\n    }\\n    return result;\\n  }\\n\\n  /**\\n   * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n   * Returns 0 if given 0.\\n   */\\n  function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n    unchecked {\\n      uint256 result = log256(value);\\n      return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\\n    }\\n  }\\n}\\n\\nlibrary Strings {\\n  bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n  uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n   */\\n  function toString(uint256 value) internal pure returns (string memory) {\\n    unchecked {\\n      uint256 length = Math.log10(value) + 1;\\n      string memory buffer = new string(length);\\n      uint256 ptr;\\n      /// @solidity memory-safe-assembly\\n      assembly {\\n        ptr := add(buffer, add(32, length))\\n      }\\n      while (true) {\\n        ptr--;\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n          mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n        }\\n        value /= 10;\\n        if (value == 0) break;\\n      }\\n      return buffer;\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n   */\\n  function toHexString(uint256 value) internal pure returns (string memory) {\\n    unchecked {\\n      return toHexString(value, Math.log256(value) + 1);\\n    }\\n  }\\n\\n  /**\\n   * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n   */\\n  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n    bytes memory buffer = new bytes(2 * length + 2);\\n    buffer[0] = \\\"0\\\";\\n    buffer[1] = \\\"x\\\";\\n    for (uint256 i = 2 * length + 1; i > 1; --i) {\\n      buffer[i] = _SYMBOLS[value & 0xf];\\n      value >>= 4;\\n    }\\n    require(value == 0, \\\"Strings: hex length insufficient\\\");\\n    return string(buffer);\\n  }\\n\\n  /**\\n   * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n   */\\n  function toHexString(address addr) internal pure returns (string memory) {\\n    return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n  }\\n}\\n\\nlibrary Base64 {\\n  /**\\n   * @dev Base64 Encoding/Decoding Table\\n   */\\n  string internal constant _TABLE = \\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\";\\n\\n  /**\\n   * @dev Converts a `bytes` to its Bytes64 `string` representation.\\n   */\\n  function encode(bytes memory data) internal pure returns (string memory) {\\n    /**\\n     * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\\n     * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\\n     */\\n    if (data.length == 0) return \\\"\\\";\\n\\n    // Loads the table into memory\\n    string memory table = _TABLE;\\n\\n    // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\\n    // and split into 4 numbers of 6 bits.\\n    // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\\n    // - `data.length + 2`  -> Round up\\n    // - `/ 3`              -> Number of 3-bytes chunks\\n    // - `4 *`              -> 4 characters for each chunk\\n    string memory result = new string(4 * ((data.length + 2) / 3));\\n\\n    /// @solidity memory-safe-assembly\\n    assembly {\\n      // Prepare the lookup table (skip the first \\\"length\\\" byte)\\n      let tablePtr := add(table, 1)\\n\\n      // Prepare result pointer, jump over length\\n      let resultPtr := add(result, 32)\\n\\n      // Run over the input, 3 bytes at a time\\n      for {\\n        let dataPtr := data\\n        let endPtr := add(data, mload(data))\\n      } lt(dataPtr, endPtr) {\\n\\n      } {\\n        // Advance 3 bytes\\n        dataPtr := add(dataPtr, 3)\\n        let input := mload(dataPtr)\\n\\n        // To write each character, shift the 3 bytes (18 bits) chunk\\n        // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\\n        // and apply logical AND with 0x3F which is the number of\\n        // the previous character in the ASCII table prior to the Base64 Table\\n        // The result is then added to the table to get the character to write,\\n        // and finally write it in the result pointer but with a left shift\\n        // of 256 (1 byte) - 8 (1 ASCII char) = 248 bits\\n\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1) // Advance\\n\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1) // Advance\\n\\n        mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\\n        resultPtr := add(resultPtr, 1) // Advance\\n\\n        mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\\n        resultPtr := add(resultPtr, 1) // Advance\\n      }\\n\\n      // When data `bytes` is not exactly 3 bytes long\\n      // it is padded with `=` characters at the end\\n      switch mod(mload(data), 3)\\n      case 1 {\\n        mstore8(sub(resultPtr, 1), 0x3d)\\n        mstore8(sub(resultPtr, 2), 0x3d)\\n      }\\n      case 2 {\\n        mstore8(sub(resultPtr, 1), 0x3d)\\n      }\\n    }\\n\\n    return result;\\n  }\\n}\\n\\n/// NFT metadata library for rendering metadata associated with editions\\nlibrary NFTMetadataRenderer {\\n  /// Function to create the metadata for an edition\\n  /// @param params MetadataParams struct containing all metadata information\\n  function createMetadataEdition(MetadataParams memory params) internal pure returns (string memory) {\\n    bytes memory json = createMetadataJSON(params);\\n    return encodeMetadataJSON(json);\\n  }\\n\\n  function encodeContractURIJSON(\\n    string memory name,\\n    string memory description,\\n    string memory imageURI,\\n    string memory animationURI,\\n    uint256 royaltyBPS,\\n    address royaltyRecipient\\n  ) internal pure returns (string memory) {\\n    bytes memory imageSpace = bytes(\\\"\\\");\\n    if (bytes(imageURI).length > 0) {\\n      imageSpace = abi.encodePacked('\\\", \\\"image\\\": \\\"', imageURI);\\n    }\\n    bytes memory animationSpace = bytes(\\\"\\\");\\n    if (bytes(animationURI).length > 0) {\\n      animationSpace = abi.encodePacked('\\\", \\\"animation_url\\\": \\\"', animationURI);\\n    }\\n\\n    return\\n      string(\\n        encodeMetadataJSON(\\n          abi.encodePacked(\\n            '{\\\"name\\\": \\\"',\\n            name,\\n            '\\\", \\\"description\\\": \\\"',\\n            description,\\n            // this is for opensea since they don't respect ERC2981 right now\\n            '\\\", \\\"seller_fee_basis_points\\\": ',\\n            Strings.toString(royaltyBPS),\\n            ', \\\"fee_recipient\\\": \\\"',\\n            Strings.toHexString(uint256(uint160(royaltyRecipient)), 20),\\n            imageSpace,\\n            animationSpace,\\n            '\\\"}'\\n          )\\n        )\\n      );\\n  }\\n\\n  /// Function to create the metadata json string for the nft edition\\n  /// @param params MetadataParams struct containing all metadata information\\n  function createMetadataJSON(MetadataParams memory params) internal pure returns (bytes memory) {\\n    bytes memory editionSizeText;\\n    string memory tokenOfEditionString;\\n    {\\n      if (params.editionSize > 0) {\\n        editionSizeText = abi.encodePacked(\\\"/\\\", Strings.toString(params.editionSize));\\n      }\\n\\n      tokenOfEditionString = Strings.toString(params.tokenOfEdition);\\n    }\\n\\n    return\\n      abi.encodePacked(\\n        abi.encodePacked(\\n          '{\\\"name\\\": \\\"',\\n          params.name,\\n          \\\" \\\",\\n          tokenOfEditionString,\\n          editionSizeText,\\n          '\\\", \\\"description\\\": \\\"',\\n          params.description,\\n          '\\\", \\\"external_url\\\": \\\"',\\n          params.externalUrl,\\n          '\\\", \\\"image\\\": \\\"',\\n          params.imageURI,\\n          '\\\", \\\"encrypted_media_url\\\": \\\"',\\n          params.encryptedMediaUrl\\n        ),\\n        abi.encodePacked(\\n          '\\\", \\\"decryption_key\\\": \\\"',\\n          params.decryptionKey,\\n          '\\\", \\\"hash\\\": \\\"',\\n          params.hash,\\n          '\\\", \\\"decrypted_media_url\\\": \\\"',\\n          params.decryptedMediaUrl,\\n          '\\\", \\\"animation_url\\\": \\\"',\\n          params.animationURI,\\n          '\\\", \\\"properties\\\": {\\\"number\\\": ',\\n          tokenOfEditionString,\\n          ', \\\"name\\\": \\\"',\\n          params.name,\\n          '\\\"}}'\\n        )\\n      );\\n  }\\n\\n  /// Encodes the argument json bytes into base64-data uri format\\n  /// @param json Raw json to base64 and turn into a data-uri\\n  function encodeMetadataJSON(bytes memory json) internal pure returns (string memory) {\\n    return string(abi.encodePacked(\\\"data:application/json;base64,\\\", Base64.encode(json)));\\n  }\\n\\n  /// Generates edition metadata from storage information as base64-json blob\\n  /// Combines the media data and metadata\\n  /// @param imageUrl URL of image to render for edition\\n  /// @param animationUrl URL of animation to render for edition\\n  function tokenMediaData(string memory imageUrl, string memory animationUrl) internal pure returns (string memory) {\\n    bool hasImage = bytes(imageUrl).length > 0;\\n    bool hasAnimation = bytes(animationUrl).length > 0;\\n    if (hasImage && hasAnimation) {\\n      return string(abi.encodePacked('image\\\": \\\"', imageUrl, '\\\", \\\"animation_url\\\": \\\"', animationUrl, '\\\", \\\"'));\\n    }\\n    if (hasImage) {\\n      return string(abi.encodePacked('image\\\": \\\"', imageUrl, '\\\", \\\"'));\\n    }\\n    if (hasAnimation) {\\n      return string(abi.encodePacked('animation_url\\\": \\\"', animationUrl, '\\\", \\\"'));\\n    }\\n\\n    return \\\"\\\";\\n  }\\n\\n  /// @dev Generates a metadata string from provided URLs and keys\\n  /// This function checks for the presence of media-related information and formats them into a JSON-like string.\\n  /// @param params MetadataParams struct containing all metadata information\\n  /// @return A string that concatenates all provided and non-empty fields into a JSON-like format for NFT metadata.\\n  function tokenMediaData(MetadataParams memory params) internal pure returns (string memory) {\\n    // Initialize boolean variables to check if each parameter contains data.\\n    bool hasImage = bytes(params.imageURI).length > 0;\\n    bool hasAnimation = bytes(params.animationURI).length > 0;\\n    bool hasExternal = bytes(params.externalUrl).length > 0;\\n    bool hasEncryptedMedia = bytes(params.encryptedMediaUrl).length > 0;\\n    bool hasDecryptionKey = bytes(params.decryptionKey).length > 0;\\n    bool hasHash = bytes(params.hash).length > 0;\\n    bool hasDecryptedMedia = bytes(params.decryptedMediaUrl).length > 0;\\n\\n    // Check if all parameters are provided and concatenate them into a JSON-like string.\\n    if (\\n      hasImage && hasAnimation && hasExternal && hasEncryptedMedia && hasDecryptionKey && hasHash && hasDecryptedMedia\\n    ) {\\n      return\\n        string(\\n          abi.encodePacked(\\n            '\\\"image\\\": \\\"',\\n            params.imageURI,\\n            '\\\", ',\\n            '\\\"animation_url\\\": \\\"',\\n            params.animationURI,\\n            '\\\", ',\\n            '\\\"external_url\\\": \\\"',\\n            params.externalUrl,\\n            '\\\", ',\\n            '\\\"encrypted_media_url\\\": \\\"',\\n            params.encryptedMediaUrl,\\n            '\\\", ',\\n            '\\\"decryption_key\\\": \\\"',\\n            params.decryptionKey,\\n            '\\\", ',\\n            '\\\"hash\\\": \\\"',\\n            params.hash,\\n            '\\\", ',\\n            '\\\"decrypted_media_url\\\": \\\"',\\n            params.decryptedMediaUrl,\\n            '\\\", '\\n          )\\n        );\\n    }\\n\\n    // Individual checks for each field, appending them to the result if they contain data.\\n    if (hasImage) {\\n      return string(abi.encodePacked('\\\"image\\\": \\\"', params.imageURI, '\\\", '));\\n    }\\n    if (hasAnimation) {\\n      return string(abi.encodePacked('\\\"animation_url\\\": \\\"', params.animationURI, '\\\", '));\\n    }\\n    if (hasExternal) {\\n      return string(abi.encodePacked('\\\"external_url\\\": \\\"', params.externalUrl, '\\\", '));\\n    }\\n    if (hasEncryptedMedia) {\\n      return string(abi.encodePacked('\\\"encrypted_media_url\\\": \\\"', params.encryptedMediaUrl, '\\\", '));\\n    }\\n    if (hasDecryptionKey) {\\n      return string(abi.encodePacked('\\\"decryption_key\\\": \\\"', params.decryptionKey, '\\\", '));\\n    }\\n    if (hasHash) {\\n      return string(abi.encodePacked('\\\"hash\\\": \\\"', params.hash, '\\\", '));\\n    }\\n    if (hasDecryptedMedia) {\\n      return string(abi.encodePacked('\\\"decrypted_media_url\\\": \\\"', params.decryptedMediaUrl, '\\\", '));\\n    }\\n\\n    // Return an empty string if none of the fields are provided.\\n    return \\\"\\\";\\n  }\\n}\\n\",\"keccak256\":\"0x8511fdbf1472b89c4cfcb6f062b8be3a5e5dcd0589fe1593955719968aba89eb\",\"license\":\"MIT\"},\"src/struct/CountdownERC721Initializer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport {CustomERC721SalesConfiguration} from \\\"src/struct/CustomERC721SalesConfiguration.sol\\\";\\n\\n/// @title A struct for initializing a CountdownERC721 contract\\n/// @dev This struct is used during the deployment of a CountdownERC721 to set initial configuration parameters.\\n/// @param description The description of the token.\\n/// @param startDate The maximum start date\\n/// @param initialMaxSupply The maximum initial supply.\\n/// @param mintInterval The maximum interval between mints\\n/// @param initialOwner The user that owns the contract, can mint tokens, receives royalty and sales payouts, and can update the base URL if needed.\\n/// @param initialMinter The user that is allowed to mint tokens on behalf of others, typically for offchain purchasers.\\n/// @param fundsRecipient The wallet or user that receives funds from token sales.\\n/// @param contractURI The URI for the contract metadata.\\n/// @param salesConfiguration The initial sales configuration settings, defining how tokens are sold.\\nstruct CountdownERC721Initializer {\\n  string description; // The description of the token.\\n  string imageURI; // The URI for the image associated with this contract.\\n  string externalLink; // The URI for the external metadata associated with this contract.\\n  string encryptedMediaURI; // The URI for the encrypted media associated with this contract.\\n  uint40 startDate; // The starting date for the countdown\\n  uint32 initialMaxSupply; // The theoretical initial maximum supply of tokens at the start of the countdown.\\n  uint24 mintInterval; // The interval between possible mints,\\n  address initialOwner; // Address of the initial owner, who has administrative privileges.\\n  address initialMinter; // Address of the initial minter, who can mint new tokens for those who purchase offchain.\\n  address payable fundsRecipient; // Address of the recipient for funds gathered from sales.\\n  string contractURI; // URI for the metadata associated with this contract.\\n  CustomERC721SalesConfiguration salesConfiguration; // Configuration of sales settings for this contract.\\n}\\n\",\"keccak256\":\"0xe4be1826d34002f06dca13c06d45502973861f983cb04c6cf7a50f28da2c1188\",\"license\":\"MIT\"},\"src/struct/CustomERC721SaleDetails.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\n/// @notice Return value for sales details to use with front-ends\\nstruct CustomERC721SaleDetails {\\n  // Sale state\\n  bool publicSaleActive;\\n  // Price for public sale\\n  uint256 publicSalePrice;\\n  // Timed sale actions for public sale\\n  uint256 publicSaleStart;\\n  // Limit public sale to a specific number of mints per wallet\\n  uint256 maxSalePurchasePerAddress;\\n  // Information about the rest of the supply\\n  // Total that have been minted\\n  uint256 totalMinted;\\n  // The total supply available\\n  uint256 maxSupply;\\n}\\n\",\"keccak256\":\"0xdf834d394978f5edc565b5eff47953ef3c2e2cb7421f87fcaf4f8c76fbb8d8e6\",\"license\":\"MIT\"},\"src/struct/CustomERC721SalesConfiguration.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\n/// @notice Sales states and configuration\\n/// @dev Uses 2 storage slots (Can be set by the owner)\\nstruct CustomERC721SalesConfiguration {\\n  /// @dev Public sale price (max ether value > 1000 ether with this value)\\n  uint104 publicSalePrice;\\n  /// @notice Purchase mint limit per address (if set to 0 === unlimited mints)\\n  /// @dev Max purchase number per txn (90+32 = 122)\\n  uint24 maxSalePurchasePerAddress;\\n}\\n\",\"keccak256\":\"0xed45de0442a50cf3a4c4863055d34ff6e8ac3f04b945cea29df4b5786d324768\",\"license\":\"MIT\"},\"src/struct/MetadataParams.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nstruct MetadataParams {\\n  string name;\\n  string description;\\n  string imageURI;\\n  string animationURI;\\n  string externalUrl;\\n  string encryptedMediaUrl;\\n  string decryptionKey;\\n  string hash;\\n  string decryptedMediaUrl;\\n  uint256 tokenOfEdition;\\n  uint256 editionSize;\\n}\\n\",\"keccak256\":\"0x60de5386a6caf5675ba2428b7607901266db4dca009a08b03df3edb769593d81\",\"license\":\"MIT\"},\"src/token/CountdownERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport {ERC721H} from \\\"../abstract/ERC721H.sol\\\";\\nimport {NonReentrant} from \\\"../abstract/NonReentrant.sol\\\";\\nimport {ContractMetadata} from \\\"../abstract/ContractMetadata.sol\\\";\\n\\nimport {HolographERC721Interface} from \\\"../interface/HolographERC721Interface.sol\\\";\\nimport {HolographerInterface} from \\\"../interface/HolographerInterface.sol\\\";\\nimport {HolographInterface} from \\\"../interface/HolographInterface.sol\\\";\\nimport {ICustomERC721} from \\\"../interface/ICustomERC721.sol\\\";\\nimport {IDropsPriceOracle} from \\\"../drops/interface/IDropsPriceOracle.sol\\\";\\nimport {HolographTreasuryInterface} from \\\"../interface/HolographTreasuryInterface.sol\\\";\\n\\nimport {AddressMintDetails} from \\\"../drops/struct/AddressMintDetails.sol\\\";\\nimport {CountdownERC721Initializer} from \\\"src/struct/CountdownERC721Initializer.sol\\\";\\nimport {CustomERC721SaleDetails} from \\\"src/struct/CustomERC721SaleDetails.sol\\\";\\nimport {CustomERC721SalesConfiguration} from \\\"src/struct/CustomERC721SalesConfiguration.sol\\\";\\nimport {MetadataParams} from \\\"src/struct/MetadataParams.sol\\\";\\n\\nimport {Address} from \\\"../drops/library/Address.sol\\\";\\nimport {MerkleProof} from \\\"../drops/library/MerkleProof.sol\\\";\\nimport {Strings} from \\\"./../drops/library/Strings.sol\\\";\\nimport {NFTMetadataRenderer} from \\\"../library/NFTMetadataRenderer.sol\\\";\\n\\n/**\\n * @dev This contract subscribes to the following HolographERC721 events:\\n *       - customContractURI\\n *\\n *       Do not enable or subscribe to any other events unless you modified the source code for them.\\n */\\ncontract CountdownERC721 is NonReentrant, ContractMetadata, ERC721H, ICustomERC721 {\\n  using Strings for uint256;\\n\\n  // TODO: Update the base image URI\\n  string private constant BASE_IMAGE_URI = \\\"ipfs://QmNMraA4KcB1epgWfqN6krn2WUyT4qpaQzbEpMhXjBCNCW/nft.png\\\";\\n  string private constant BASE_ANIMATION_URI = \\\"\\\"; // Define if you have a specific animation URI\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                             CONTRACT VARIABLES                             */\\n  /*        all variables, without custom storage slots, are defined here       */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /// @notice Getter for the description\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  string public DESCRIPTION;\\n\\n  /// @notice Getter for the purchase start date\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  uint256 public START_DATE;\\n\\n  /// @notice Getter for the initial max supply\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  uint256 public INITIAL_MAX_SUPPLY;\\n\\n  /// @notice Getter for the mint interval\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  uint256 public MINT_INTERVAL;\\n\\n  /// @notice Getter for the mint interval\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  address payable FUNDS_RECIPIENT;\\n\\n  /// @notice Getter for the initial end date\\n  /// @dev This storage variable is set only once in the init and can be considered as immutable\\n  uint256 public INITIAL_END_DATE;\\n\\n  /// @notice Getter for the end date\\n  uint256 public END_DATE;\\n\\n  /// @notice Getter for the minter\\n  /// @dev This account tokens on behalf of those that purchase them offchain\\n  address public minter;\\n\\n  /**\\n   * @dev Address of the price oracle proxy\\n   */\\n  IDropsPriceOracle public constant dropsPriceOracle = IDropsPriceOracle(0xeA7f4C52cbD4CF1036CdCa8B16AcA11f5b09cF6E);\\n\\n  /**\\n   * @dev Internal reference used for minting incremental token ids.\\n   */\\n  uint224 private _currentTokenId;\\n\\n  /**\\n   * @dev Internal reference to the base URI\\n   */\\n  string private _baseURI;\\n\\n  /// @dev Gas limit for transferring funds\\n  uint256 private constant STATIC_GAS_LIMIT = 210_000;\\n\\n  /**\\n   * @notice Sales configuration\\n   */\\n  CustomERC721SalesConfiguration public salesConfig;\\n\\n  /**\\n   * @dev Mapping for the total mints by address\\n   */\\n  mapping(address => uint256) public totalMintsByAddress;\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                  MODIFIERS                                 */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /**\\n   * @notice Allows only the minter to call the function\\n   */\\n  modifier onlyMinter() {\\n    if (msgSender() != minter) {\\n      revert Access_OnlyMinter();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice Allows user to mint tokens at a quantity\\n   */\\n  modifier canMintTokens(uint256 quantity) {\\n    /// @dev Check if the countdown has completed\\n    ///      END_DATE - MINT_INTERVAL * (quantity - 1) represent the time when the last mint will be allowed\\n    ///      (quantity - 1) because we want to allow the last mint to be available until the END_DATE\\n    if (block.timestamp >= END_DATE - MINT_INTERVAL * (quantity - 1)) {\\n      revert Purchase_CountdownCompleted();\\n    }\\n\\n    _;\\n  }\\n\\n  /**\\n   * @notice Public sale active\\n   */\\n  modifier onlyPublicSaleActive() {\\n    if (!_publicSaleActive()) {\\n      revert Sale_Inactive();\\n    }\\n    _;\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                            CONTRACT INITIALIZERS                           */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /**\\n   * @dev Constructor is left empty and init is used instead\\n   */\\n  constructor() {}\\n\\n  /**\\n   * @notice Used internally to initialize the contract instead of through a constructor\\n   * @dev This function is called by the deployer/the factory when creating a contract\\n   * @param initPayload abi encoded payload (CountdownERC721Initializer struct) to use for contract initilaization\\n   */\\n  function init(bytes memory initPayload) external override returns (bytes4) {\\n    require(!_isInitialized(), \\\"HOLOGRAPH: already initialized\\\");\\n\\n    // Enable sourceExternalCall to work on init, we set holographer here since it's only set after init\\n    assembly {\\n      sstore(_holographerSlot, caller())\\n    }\\n\\n    // Decode the initializer payload to get the CountdownERC721Initializer struct\\n    CountdownERC721Initializer memory initializer = abi.decode(initPayload, (CountdownERC721Initializer));\\n\\n    _setupContractURI(initializer.contractURI);\\n\\n    // Setup the owner role\\n    _setOwner(initializer.initialOwner);\\n\\n    // Setup the minter role\\n    _setMinter(initializer.initialMinter);\\n\\n    // Setup the contract URI\\n\\n    // Set the description\\n    /// @dev The description is a human-readable description of the token.\\n    ///      The description is used like an immutable.\\n    DESCRIPTION = initializer.description;\\n\\n    // Set the sale start date.\\n    /// @dev The sale start date represents the date when the public sale starts.\\n    ///      The sale start date is used like an immutable.\\n    START_DATE = initializer.startDate;\\n\\n    // Set the initial max supply.\\n    /// @dev The initial max supply represents the theoretical maximum supply at the start date timestamp.\\n    ///      The sale start date is used like an immutable.\\n    INITIAL_MAX_SUPPLY = initializer.initialMaxSupply;\\n\\n    // Set the mint interval.\\n    /// @dev The mint interval specifies the duration by which the END_DATE is decreased after each mint operation.\\n    ///      The sale start date is used like an immutable.\\n    MINT_INTERVAL = initializer.mintInterval;\\n\\n    // Set the funds recipient\\n    /// @dev The funds recipient is the address that receives the funds from the token sales.\\n    ///      The funds recipient can be updated by the owner.\\n    FUNDS_RECIPIENT = initializer.fundsRecipient;\\n\\n    // Set the end dates\\n    /// @dev The END_DATE is calculated by adding the initial max supply times the mint interval to the start date.\\n    ///      The END_DATE is decreased after each mint operation by the mint interval.\\n    uint256 endDate = initializer.startDate + initializer.initialMaxSupply * initializer.mintInterval;\\n    END_DATE = endDate;\\n    /// @dev The sale start date is used like an immutable.\\n    INITIAL_END_DATE = endDate;\\n\\n    // Set the sales configuration\\n    salesConfig = initializer.salesConfiguration;\\n\\n    setStatus(1);\\n\\n    return _init(initPayload);\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                     PUBLIC NON STATE CHANGING FUNCTIONS                    */\\n  /*                                   static                                   */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /**\\n   * @notice Returns the version of the contract\\n   * @dev Used for contract versioning and validation\\n   * @return version of the contract\\n   */\\n  function version() external pure returns (uint32) {\\n    return 1;\\n  }\\n\\n  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {\\n    return interfaceId == type(ICustomERC721).interfaceId;\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                     PUBLIC NON STATE CHANGING FUNCTIONS                    */\\n  /*                                   dynamic                                  */\\n  /* -------------------------------------------------------------------------- */\\n\\n  function owner() external view override(ERC721H, ICustomERC721) returns (address) {\\n    return _getOwner();\\n  }\\n\\n  function isAdmin(address user) external view returns (bool) {\\n    return (_getOwner() == user);\\n  }\\n\\n  /**\\n   * @notice Returns the theoretical maximum supply for the current time\\n   * @dev The max supply is calculated based on the current time and the mint interval, by subtracting\\n   *      the elapsed_mint intervals from the initial max supply.\\n   *      - The max supply is the initial max supply if the current time is less than the start date.\\n   *      - The max supply is zero if the current time is greater than the end date.\\n   *      - The max supply is decreased by one for each mint interval that has passed.\\n   *      - The max supply is calculated by subtracting the intervals elapsed from the initial max supply.\\n   * @return max supply\\n   */\\n  function currentTheoricalMaxSupply() public view returns (uint256) {\\n    if (block.timestamp <= START_DATE) {\\n      return INITIAL_MAX_SUPPLY;\\n    } else if (block.timestamp >= START_DATE + INITIAL_MAX_SUPPLY * MINT_INTERVAL) {\\n      return 0; // All intervals have elapsed\\n    } else {\\n      // EVM division is floored\\n      uint256 intervalsElapsed = (block.timestamp - START_DATE) / MINT_INTERVAL;\\n      return INITIAL_MAX_SUPPLY - intervalsElapsed;\\n    }\\n  }\\n\\n  /**\\n   * @notice Returns the total amount of tokens minted in the contract.\\n   */\\n  function totalMinted() external view returns (uint256) {\\n    return _currentTokenId;\\n  }\\n\\n  /**\\n   * @notice Sale details\\n   * @dev Returns the sale details for the contract\\n   * @return SaleDetails sale information details\\n   */\\n  function saleDetails() external view returns (CustomERC721SaleDetails memory) {\\n    return\\n      CustomERC721SaleDetails({\\n        publicSaleActive: _publicSaleActive(), // Based on the current time\\n        publicSalePrice: salesConfig.publicSalePrice, // Can be updated by the owner\\n        maxSalePurchasePerAddress: salesConfig.maxSalePurchasePerAddress, // Can be updated by the owner\\n        publicSaleStart: START_DATE, // Immutable\\n        totalMinted: _currentTokenId, // Updated after each mint\\n        maxSupply: currentTheoricalMaxSupply() // Updated after each mint or after each interval\\n      });\\n  }\\n\\n  /**\\n   * @dev Number of NFTs the user has minted per address\\n   * @param minter to get counts for\\n   */\\n  function mintedPerAddress(address minter) external view returns (AddressMintDetails memory) {\\n    return\\n      AddressMintDetails({\\n        presaleMints: 0, // NOTE: Presale mints are not supported\\n        publicMints: totalMintsByAddress[minter],\\n        totalMints: totalMintsByAddress[minter]\\n      });\\n  }\\n\\n  /**\\n   * @dev Returns a base64 encoded metadata URI for a given tokenId.\\n   * @param tokenId The ID of the token to get URI for\\n   * @return Token URI\\n   */\\n  function tokenURI(uint256 tokenId) public view returns (string memory) {\\n    HolographERC721Interface H721 = HolographERC721Interface(holographer());\\n    require(H721.exists(tokenId), \\\"ERC721: token does not exist\\\");\\n\\n    string memory _name = H721.name();\\n    MetadataParams memory params = MetadataParams({\\n      name: _name,\\n      description: DESCRIPTION,\\n      imageURI: BASE_IMAGE_URI,\\n      animationURI: BASE_ANIMATION_URI,\\n      externalUrl: \\\"https://your-nft-project.com\\\", // This should be dynamically set or fetched\\n      encryptedMediaUrl: \\\"ar://encryptedMediaUriHere\\\", // This should be dynamically set or fetched\\n      decryptionKey: \\\"decryptionKeyHere\\\", // This should be dynamically set or fetched\\n      hash: \\\"uniqueNftHashHere\\\", // This should be dynamically set or fetched\\n      decryptedMediaUrl: \\\"ar://decryptedMediaUriHere\\\", // This should be dynamically set or fetched\\n      tokenOfEdition: tokenId,\\n      editionSize: 0 // Set or fetch dynamically if applicable\\n    });\\n\\n    return NFTMetadataRenderer.createMetadataEdition(params);\\n  }\\n\\n  /**\\n   * @notice Convert USD price to current price in native Ether units\\n   */\\n  function getNativePrice() external view returns (uint256) {\\n    return _usdToWei(salesConfig.publicSalePrice);\\n  }\\n\\n  /**\\n   * @notice Returns the name of the token through the holographer entrypoint\\n   */\\n  function name() external view returns (string memory) {\\n    return HolographERC721Interface(holographer()).name();\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                       PUBLIC STATE CHANGING FUNCTIONS                      */\\n  /*                              available to all                              */\\n  /* -------------------------------------------------------------------------- */\\n\\n  function multicall(bytes[] memory data) public returns (bytes[] memory results) {\\n    results = new bytes[](data.length);\\n    for (uint256 i = 0; i < data.length; i++) {\\n      results[i] = Address.functionDelegateCall(address(this), abi.encodePacked(data[i], msgSender()));\\n    }\\n  }\\n\\n  /**\\n   * @dev This allows the user to purchase/mint a edition at the given price in the contract.\\n   * @param quantity quantity to purchase\\n   */\\n  function purchase(\\n    uint256 quantity\\n  ) external payable nonReentrant canMintTokens(quantity) onlyPublicSaleActive returns (uint256) {\\n    uint256 salePrice = _usdToWei(salesConfig.publicSalePrice);\\n\\n    if (msg.value < (salePrice) * quantity) {\\n      // The error will display what the correct price should be\\n      revert Purchase_WrongPrice((salesConfig.publicSalePrice) * quantity);\\n    }\\n\\n    // Reducing the end date by removing the quantity of mints times the mint interval\\n    END_DATE = END_DATE - quantity * MINT_INTERVAL;\\n\\n    uint256 remainder = msg.value - (salePrice * quantity);\\n\\n    // If max purchase per address == 0 there is no limit.\\n    // Any other number, the per address mint limit is that.\\n    if (\\n      salesConfig.maxSalePurchasePerAddress != 0 &&\\n      totalMintsByAddress[msgSender()] + quantity > salesConfig.maxSalePurchasePerAddress\\n    ) {\\n      revert Purchase_TooManyForAddress();\\n    }\\n\\n    // First mint the NFTs\\n    _mintNFTs(msgSender(), quantity);\\n\\n    HolographERC721Interface H721 = HolographERC721Interface(holographer());\\n    uint256 chainPrepend = H721.sourceGetChainPrepend();\\n    uint256 firstMintedTokenId = (chainPrepend + uint256(_currentTokenId - quantity)) + 1;\\n\\n    emit Sale({\\n      to: msgSender(),\\n      quantity: quantity,\\n      pricePerToken: salePrice,\\n      firstPurchasedTokenId: firstMintedTokenId\\n    });\\n\\n    // Refund any overpayment\\n    if (remainder > 0) {\\n      msgSender().call{value: remainder, gas: gasleft() > STATIC_GAS_LIMIT ? STATIC_GAS_LIMIT : gasleft()}(\\\"\\\");\\n    }\\n\\n    return firstMintedTokenId;\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                       PUBLIC STATE CHANGING FUNCTIONS                      */\\n  /*                                 admin only                                 */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /**\\n   * @notice Minter account mints tokens to a recipient that has paid offchain\\n   * @param recipient recipient to mint to\\n   * @param quantity quantity to mint\\n   */\\n  function mintTo(address recipient, uint256 quantity) external onlyMinter canMintTokens(quantity) returns (uint256) {\\n    _mintNFTs(recipient, quantity);\\n\\n    return _currentTokenId;\\n  }\\n\\n  /**\\n   * @dev This sets the sales configuration\\n   * @param publicSalePrice New public sale price\\n   * @param maxSalePurchasePerAddress Max # of purchases (public) per address allowed\\n   */\\n  function setSaleConfiguration(uint104 publicSalePrice, uint24 maxSalePurchasePerAddress) external onlyOwner {\\n    salesConfig.publicSalePrice = publicSalePrice;\\n    salesConfig.maxSalePurchasePerAddress = maxSalePurchasePerAddress;\\n\\n    emit SalesConfigChanged(msgSender());\\n  }\\n\\n  /**\\n   * @notice Set a different funds recipient\\n   * @param newRecipientAddress new funds recipient address\\n   */\\n  function setFundsRecipient(address payable newRecipientAddress) external onlyOwner {\\n    if (newRecipientAddress == address(0)) {\\n      revert(\\\"Funds Recipient cannot be 0 address\\\");\\n    }\\n    FUNDS_RECIPIENT = newRecipientAddress;\\n    emit FundsRecipientChanged(newRecipientAddress, msgSender());\\n  }\\n\\n  /**\\n   * @notice This withdraws native tokens from the contract to the contract owner.\\n   */\\n  function withdraw() external override nonReentrant {\\n    if (FUNDS_RECIPIENT == address(0)) {\\n      revert(\\\"Funds Recipient address not set\\\");\\n    }\\n    address sender = msgSender();\\n\\n    // Get the contract balance\\n    uint256 funds = address(this).balance;\\n\\n    // Check if withdraw is allowed for sender\\n    if (sender != FUNDS_RECIPIENT && sender != _getOwner()) {\\n      revert Access_WithdrawNotAllowed();\\n    }\\n\\n    // Payout recipient\\n    (bool successFunds, ) = FUNDS_RECIPIENT.call{value: funds, gas: STATIC_GAS_LIMIT}(\\\"\\\");\\n    if (!successFunds) {\\n      revert Withdraw_FundsSendFailure();\\n    }\\n\\n    // Emit event for indexing\\n    emit FundsWithdrawn(sender, FUNDS_RECIPIENT, funds);\\n  }\\n\\n  /**\\n   * @notice Set the minter address\\n   * @param minterAddress new minter address\\n   */\\n  function setMinter(address minterAddress) external onlyOwner {\\n    _setMinter(minterAddress);\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                             INTERNAL FUNCTIONS                             */\\n  /*                             non state changing                             */\\n  /* -------------------------------------------------------------------------- */\\n\\n  /**\\n   * @dev Internal function to return the base URI stored in the contract.\\n   * Used to construct the URI for each token.\\n   */\\n  function baseURI() internal view returns (string memory) {\\n    return _baseURI;\\n  }\\n\\n  /// @notice Checks whether contract metadata can be set in the given execution context.\\n  function _canSetContractURI() internal view override returns (bool) {\\n    return msgSender() == _getOwner();\\n  }\\n\\n  /**\\n   * @dev Checks if the public sale is active\\n   */\\n  function _publicSaleActive() internal view returns (bool) {\\n    return START_DATE <= block.timestamp;\\n  }\\n\\n  /**\\n   * @dev Converts the given amount in USD to the equivalent amount in wei using the price oracle.\\n   * @param amount The amount in USD to convert to wei\\n   */\\n  function _usdToWei(uint256 amount) internal view returns (uint256 weiAmount) {\\n    if (amount == 0) {\\n      return 0;\\n    }\\n    weiAmount = dropsPriceOracle.convertUsdToWei(amount);\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                             INTERNAL FUNCTIONS                             */\\n  /*                               state changing                               */\\n  /* -------------------------------------------------------------------------- */\\n\\n  function _mintNFTs(address recipient, uint256 quantity) internal {\\n    HolographERC721Interface H721 = HolographERC721Interface(holographer());\\n    uint256 chainPrepend = H721.sourceGetChainPrepend();\\n    uint224 tokenId = 0;\\n\\n    for (uint256 i = 0; i != quantity; ) {\\n      unchecked {\\n        _currentTokenId += 1;\\n      }\\n      while (\\n        H721.exists(chainPrepend + uint256(_currentTokenId)) || H721.burned(chainPrepend + uint256(_currentTokenId))\\n      ) {\\n        unchecked {\\n          _currentTokenId += 1;\\n        }\\n      }\\n      tokenId = _currentTokenId;\\n      H721.sourceMint(recipient, tokenId);\\n\\n      uint256 id = chainPrepend + uint256(tokenId);\\n      emit NFTMinted(recipient, tokenId, id);\\n\\n      unchecked {\\n        i++;\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev Set the minter address\\n   * @param minterAddress new minter address\\n   */\\n  function _setMinter(address minterAddress) internal {\\n    minter = minterAddress;\\n  }\\n\\n  /* -------------------------------------------------------------------------- */\\n  /*                                  Fallback                                  */\\n  /* -------------------------------------------------------------------------- */\\n\\n  fallback() external payable override {\\n    assembly {\\n      // Allocate memory for the error message\\n      let errorMsg := mload(0x40)\\n\\n      // Error message: \\\"Function not found\\\", properly padded with zeroes\\n      mstore(errorMsg, 0x46756e6374696f6e206e6f7420666f756e640000000000000000000000000000)\\n\\n      // Revert with the error message\\n      revert(errorMsg, 20) // 20 is the length of the error message in bytes\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x58010b4ae9ae36668d02cfb3b938fe68c428a3a244b281ffe621baf5fc9ed568\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613e30806100206000396000f3fe6080604052600436106102025760003560e01c806354fd4d501161011d578063ac9650d8116100b0578063e8a3d4851161007f578063efef39a111610064578063efef39a114610780578063f1ae885614610793578063fca3b5aa146107a857610260565b8063e8a3d48514610755578063ed6163411461076a57610260565b8063ac9650d8146106a6578063c87b56dd146106d3578063cb0793bc146106f3578063d445b9781461071357610260565b80638f32d59b116100ec5780638f32d59b146106115780639123f01e14610626578063938e3d7b14610653578063a2309ff81461067357610260565b806354fd4d50146105a257806384e7e3d3146105be5780638cb163f4146105d45780638da5cb5b146105fc57610260565b80632f54bf6e11610195578063449a52f811610164578063449a52f814610505578063457509bf146105255780634ddf47d41461053b578063545599ff1461058c57610260565b80632f54bf6e146104575780633474a4a614610477578063372c6533146104da5780633ccfd60b146104f057610260565b806317430c9e116101d157806317430c9e146103985780631d2c0b38146103bb57806324d7806c146104225780632df667fb1461044257610260565b806301ffc9a71461028b57806306fdde0314610302578063075461721461032457806310a7eb5d1461037657610260565b366102605761020f6107c8565b73ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161025691815260200190565b60405180910390a2005b6040517f46756e6374696f6e206e6f7420666f756e6400000000000000000000000000008152601481fd5b34801561029757600080fd5b506102ed6102a6366004612f82565b7fffffffff00000000000000000000000000000000000000000000000000000000167f19a31fdc000000000000000000000000000000000000000000000000000000001490565b60405190151581526020015b60405180910390f35b34801561030e57600080fd5b50610317610827565b6040516102f9919061303e565b34801561033057600080fd5b506008546103519073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102f9565b34801561038257600080fd5b50610396610391366004613073565b6108e6565b005b3480156103a457600080fd5b506103ad610aef565b6040519081526020016102f9565b3480156103c757600080fd5b50600b546103f9906cffffffffffffffffffffffffff8116906d0100000000000000000000000000900462ffffff1682565b604080516cffffffffffffffffffffffffff909316835262ffffff9091166020830152016102f9565b34801561042e57600080fd5b506102ed61043d366004613073565b610b0d565b34801561044e57600080fd5b506103ad610b6b565b34801561046357600080fd5b506102ed610472366004613073565b610bd9565b34801561048357600080fd5b5061048c610c38565b6040516102f99190600060c0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156104e657600080fd5b506103ad60025481565b3480156104fc57600080fd5b50610396610d01565b34801561051157600080fd5b506103ad610520366004613090565b611012565b34801561053157600080fd5b506103ad60065481565b34801561054757600080fd5b5061055b610556366004613208565b611114565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102f9565b34801561059857600080fd5b506103ad60075481565b3480156105ae57600080fd5b50604051600181526020016102f9565b3480156105ca57600080fd5b506103ad60045481565b3480156105e057600080fd5b5061035173ea7f4c52cbd4cf1036cdca8b16aca11f5b09cf6e81565b34801561060857600080fd5b506103516113c7565b34801561061d57600080fd5b506102ed6113f1565b34801561063257600080fd5b506103ad610641366004613073565b600c6020526000908152604090205481565b34801561065f57600080fd5b5061039661066e36600461323d565b611455565b34801561067f57600080fd5b506009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166103ad565b3480156106b257600080fd5b506106c66106c1366004613286565b6114cf565b6040516102f99190613349565b3480156106df57600080fd5b506103176106ee3660046133c9565b6115ae565b3480156106ff57600080fd5b5061039661070e36600461340e565b611984565b34801561071f57600080fd5b5061073361072e366004613073565b611ae1565b60408051825181526020808401519082015291810151908201526060016102f9565b34801561076157600080fd5b50610317611b4e565b34801561077657600080fd5b506103ad60035481565b6103ad61078e3660046133c9565b611bdc565b34801561079f57600080fd5b506103176120b9565b3480156107b457600080fd5b506103966107c3366004613073565b6120c6565b60007fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5433146000811461081f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013590565b3391505b5090565b60606108517fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561089b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108e1919081019061348c565b905090565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166109266107c8565b73ffffffffffffffffffffffffffffffffffffffff16146109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f46756e647320526563697069656e742063616e6e6f742062652030206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161099f565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610a936107c8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f70a7ea5c664ab9c21baf3da59bb2f1e1ca33557b08a0031fab4f17076744995160405160405180910390a350565b600b546000906108e1906cffffffffffffffffffffffffff166121c6565b60008173ffffffffffffffffffffffffffffffffffffffff16610b4e7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff161492915050565b60006002544211610b7d575060035490565b600454600354610b8d91906134f0565b600254610b9a919061352d565b4210610ba65750600090565b600060045460025442610bb99190613545565b610bc3919061355c565b905080600354610bd39190613545565b91505090565b6000610c037fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610c736040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c00160405280610c8a60025442101590565b15158152600b546cffffffffffffffffffffffffff8116602083015260025460408301526d0100000000000000000000000000900462ffffff1660608201526009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16608082015260a001610cfa610b6b565b9052919050565b7f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727954600203610d8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f484f4c4f47524150483a207265656e7472616e742063616c6c00000000000000604482015260640161099f565b610db560027f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b60055473ffffffffffffffffffffffffffffffffffffffff16610e34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f46756e647320526563697069656e742061646472657373206e6f742073657400604482015260640161099f565b6000610e3e6107c8565b600554909150479073ffffffffffffffffffffffffffffffffffffffff808416911614801590610ebb57507fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610ef2576040517f1dab829b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906203345090849084818181858888f193505050503d8060008114610f52576040519150601f19603f3d011682016040523d82523d6000602084013e610f57565b606091505b5050905080610f92576040517f39debd5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460405183815273ffffffffffffffffffffffffffffffffffffffff918216918516907fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a9060200160405180910390a350505061101060017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b565b60085460009073ffffffffffffffffffffffffffffffffffffffff166110366107c8565b73ffffffffffffffffffffffffffffffffffffffff1614611083576040517fd7ae9e8300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161108f600182613545565b60045461109c91906134f0565b6007546110a99190613545565b42106110e1576040517f5fe2561a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110eb848461226b565b50506009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692915050565b600061113e7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b156111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a65640000604482015260640161099f565b337fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd556000828060200190518101906111de919061363b565b90506111ee816101400151612670565b61121a8160e001517fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf77277755565b610100810151600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558051805161127a91600191602090910190612ef2565b50608081015164ffffffffff1660025560a081015163ffffffff811660035560c082015162ffffff166004819055610120830151600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556000916112ff91906137ba565b63ffffffff16826080015161131491906137e6565b64ffffffffff16600781905560068190556101608301518051600b805460209093015162ffffff166d0100000000000000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009093166cffffffffffffffffffffffffff9092169190911791909117905590506113b660017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b6113bf84612751565b949350505050565b60006108e17fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b600061141b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff166114396107c8565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61145d6113f1565b6114c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161099f565b6114cc81612670565b50565b6060815167ffffffffffffffff8111156114eb576114eb6130bc565b60405190808252806020026020018201604052801561151e57816020015b60608152602001906001900390816115095790505b50905060005b82518110156115a857611578308483815181106115435761154361380f565b60200260200101516115536107c8565b60405160200161156492919061385a565b6040516020818303038152906040526128f8565b82828151811061158a5761158a61380f565b602002602001018190525080806115a0906138a4565b915050611524565b50919050565b606060006115da7fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b6040517f4f558e790000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff821690634f558e7990602401602060405180830381865afa158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c91906138dc565b6116d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20646f6573206e6f7420657869737400000000604482015260640161099f565b60008173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561171f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611765919081019061348c565b9050600060405180610160016040528083815260200160018054611788906138fe565b80601f01602080910402602001604051908101604052809291908181526020018280546117b4906138fe565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b505050505081526020016040518060600160405280603d8152602001613d80603d913981526020016040518060200160405280600081525081526020016040518060400160405280601c81526020017f68747470733a2f2f796f75722d6e66742d70726f6a6563742e636f6d0000000081525081526020016040518060400160405280601a81526020017f61723a2f2f656e637279707465644d656469615572694865726500000000000081525081526020016040518060400160405280601181526020017f64656372797074696f6e4b65794865726500000000000000000000000000000081525081526020016040518060400160405280601181526020017f756e697175654e6674486173684865726500000000000000000000000000000081525081526020016040518060400160405280601a81526020017f61723a2f2f6465637279707465644d656469615572694865726500000000000081525081526020018681526020016000815250905061197b81612924565b95945050505050565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166119c46107c8565b73ffffffffffffffffffffffffffffffffffffffff1614611a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e0000000000604482015260640161099f565b600b805462ffffff83166d0100000000000000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009091166cffffffffffffffffffffffffff851617179055611a9b6107c8565b73ffffffffffffffffffffffffffffffffffffffff167fc1ff5e4744ac8dd2b8027a10e3723b165975297501c71c4e7dcb8796d96375db60405160405180910390a25050565b611b0560405180606001604052806000815260200160008152602001600081525090565b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff9092166000818152600c6020818152848320548087528187018490529390925290529082015290565b60008054611b5b906138fe565b80601f0160208091040260200160405190810160405280929190818152602001828054611b87906138fe565b8015611bd45780601f10611ba957610100808354040283529160200191611bd4565b820191906000526020600020905b815481529060010190602001808311611bb757829003601f168201915b505050505081565b6000611c067f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a31372795490565b600203611c6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f484f4c4f47524150483a207265656e7472616e742063616c6c00000000000000604482015260640161099f565b611c9860027f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b81611ca4600182613545565b600454611cb191906134f0565b600754611cbe9190613545565b4210611cf6576040517f5fe2561a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254421015611d32576040517ff12dcc7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b54600090611d50906cffffffffffffffffffffffffff166121c6565b9050611d5c84826134f0565b341015611db557600b54611d809085906cffffffffffffffffffffffffff166134f0565b6040517f6a1c179e00000000000000000000000000000000000000000000000000000000815260040161099f91815260200190565b600454611dc290856134f0565b600754611dcf9190613545565b6007556000611dde85836134f0565b611de89034613545565b600b549091506d0100000000000000000000000000900462ffffff1615801590611e7a5750600b546d0100000000000000000000000000900462ffffff1685600c6000611e336107c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e78919061352d565b115b15611eb1576040517f220ae94c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ec2611ebc6107c8565b8661226b565b6000611eec7fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b905060008173ffffffffffffffffffffffffffffffffffffffff166377dbd8636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5f919061394b565b600954909150600090611f919089907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16613545565b611f9b908361352d565b611fa690600161352d565b90508488611fb26107c8565b73ffffffffffffffffffffffffffffffffffffffff167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a9084604051611ff991815260200190565b60405180910390a483156120845761200f6107c8565b73ffffffffffffffffffffffffffffffffffffffff1684620334505a11612036575a61203b565b620334505b6040519091906000818181858888f193505050503d806000811461207b576040519150601f19603f3d011682016040523d82523d6000602084013e612080565b606091505b5050505b955050505050506120b460017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b919050565b60018054611b5b906138fe565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166121066107c8565b73ffffffffffffffffffffffffffffffffffffffff1614612183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e0000000000604482015260640161099f565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550565b6000816000036121d857506000919050565b6040517ff5d781610000000000000000000000000000000000000000000000000000000081526004810183905273ea7f4c52cbd4cf1036cdca8b16aca11f5b09cf6e9063f5d7816190602401602060405180830381865afa158015612241573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612265919061394b565b92915050565b60006122957fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b905060008173ffffffffffffffffffffffffffffffffffffffff166377dbd8636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612308919061394b565b90506000805b84811461266857600980547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffffffff000000000000000000000000000000000000000000000000000000009091161790555b60095473ffffffffffffffffffffffffffffffffffffffff851690634f558e79906123ae907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168661352d565b6040518263ffffffff1660e01b81526004016123cc91815260200190565b602060405180830381865afa1580156123e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240d91906138dc565b806124bb575060095473ffffffffffffffffffffffffffffffffffffffff8516906323250cae9061245c907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168661352d565b6040518263ffffffff1660e01b815260040161247a91815260200190565b602060405180830381865afa158015612497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bb91906138dc565b1561251457600980547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffffffff00000000000000000000000000000000000000000000000000000000909116179055612365565b6009546040517f3b4f1b2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90921660248201819052935090851690633b4f1b2690604401600060405180830381600087803b1580156125aa57600080fd5b505af11580156125be573d6000803e3d6000fd5b505050506000827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16846125ee919061352d565b9050827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f3a8a89b59a31c39a36febecb987e0657ab7b7c73b60ebacb44dcb9886c2d5c8a8360405161265791815260200190565b60405180910390a35060010161230e565b505050505050565b600080805461267e906138fe565b80601f01602080910402602001604051908101604052809291908181526020018280546126aa906138fe565b80156126f75780601f106126cc576101008083540402835291602001916126f7565b820191906000526020600020905b8154815290600101906020018083116126da57829003601f168201915b5050855193945061271393600093506020870192509050612ef2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612745929190613964565b60405180910390a15050565b600061277b7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b156127e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a20616c726561647920696e697469616c697a65640000000000604482015260640161099f565b337fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd8190557fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff81166128a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f484f4c4f47524150483a206f776e6572206e6f74207365740000000000000000604482015260640161099f565b6128cf60017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d4000000000000000000000000000000000000000000000000000000009392505050565b606061291d8383604051806060016040528060278152602001613dfd6027913961293c565b9392505050565b60606000612931836129c1565b905061291d81612aea565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516129669190613989565b600060405180830381855af49150503d80600081146129a1576040519150601f19603f3d011682016040523d82523d6000602084013e6129a6565b606091505b50915091506129b786838387612b1b565b9695505050505050565b606080606060008461014001511115612a04576129e2846101400151612bbb565b6040516020016129f291906139a5565b60405160208183030381529060405291505b612a12846101200151612bbb565b845160208087015160808801516040808a015160a08b01519151969750612a409688958a95949391016139ea565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260c086015160e0870151610100880151606089015189519495612a96958891602001613b70565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052612ad29291602001613d14565b60405160208183030381529060405292505050919050565b6060612af582612c79565b604051602001612b059190613d3a565b6040516020818303038152906040529050919050565b60608315612bb1578251600003612baa5773ffffffffffffffffffffffffffffffffffffffff85163b612baa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161099f565b50816113bf565b6113bf8383612dcc565b60606000612bc883612e10565b600101905060008167ffffffffffffffff811115612be857612be86130bc565b6040519080825280601f01601f191660200182016040528015612c12576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084612c1c57509392505050565b60608151600003612c9857505060408051602081019091526000815290565b6000604051806060016040528060408152602001613dbd6040913990506000600384516002612cc7919061352d565b612cd1919061355c565b612cdc9060046134f0565b67ffffffffffffffff811115612cf457612cf46130bc565b6040519080825280601f01601f191660200182016040528015612d1e576020820181803683370190505b509050600182016020820185865187015b80821015612d8a576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250612d2f565b5050600386510660018114612da65760028114612db957612dc1565b603d6001830353603d6002830353612dc1565b603d60018303535b509195945050505050565b815115612ddc5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f919061303e565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612e59577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612e85576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612ea357662386f26fc10000830492506010015b6305f5e1008310612ebb576305f5e100830492506008015b6127108310612ecf57612710830492506004015b60648310612ee1576064830492506002015b600a83106122655760010192915050565b828054612efe906138fe565b90600052602060002090601f016020900481019282612f205760008555612f66565b82601f10612f3957805160ff1916838001178555612f66565b82800160010185558215612f66579182015b82811115612f66578251825591602001919060010190612f4b565b506108239291505b808211156108235760008155600101612f6e565b600060208284031215612f9457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461291d57600080fd5b60005b83811015612fdf578181015183820152602001612fc7565b83811115612fee576000848401525b50505050565b6000815180845261300c816020860160208601612fc4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061291d6020830184612ff4565b73ffffffffffffffffffffffffffffffffffffffff811681146114cc57600080fd5b60006020828403121561308557600080fd5b813561291d81613051565b600080604083850312156130a357600080fd5b82356130ae81613051565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561310f5761310f6130bc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561315c5761315c6130bc565b604052919050565b600067ffffffffffffffff82111561317e5761317e6130bc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006131bd6131b884613164565b613115565b90508281528383830111156131d157600080fd5b828260208301376000602084830101529392505050565b600082601f8301126131f957600080fd5b61291d838335602085016131aa565b60006020828403121561321a57600080fd5b813567ffffffffffffffff81111561323157600080fd5b6113bf848285016131e8565b60006020828403121561324f57600080fd5b813567ffffffffffffffff81111561326657600080fd5b8201601f8101841361327757600080fd5b6113bf848235602084016131aa565b6000602080838503121561329957600080fd5b823567ffffffffffffffff808211156132b157600080fd5b818501915085601f8301126132c557600080fd5b8135818111156132d7576132d76130bc565b8060051b6132e6858201613115565b918252838101850191858101908984111561330057600080fd5b86860192505b8383101561333c5782358581111561331e5760008081fd5b61332c8b89838a01016131e8565b8352509186019190860190613306565b9998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156133bc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526133aa858351612ff4565b94509285019290850190600101613370565b5092979650505050505050565b6000602082840312156133db57600080fd5b5035919050565b6cffffffffffffffffffffffffff811681146114cc57600080fd5b62ffffff811681146114cc57600080fd5b6000806040838503121561342157600080fd5b823561342c816133e2565b9150602083013561343c816133fd565b809150509250929050565b600082601f83011261345857600080fd5b81516134666131b882613164565b81815284602083860101111561347b57600080fd5b6113bf826020830160208701612fc4565b60006020828403121561349e57600080fd5b815167ffffffffffffffff8111156134b557600080fd5b6113bf84828501613447565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613528576135286134c1565b500290565b60008219821115613540576135406134c1565b500190565b600082821015613557576135576134c1565b500390565b600082613592577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b805164ffffffffff811681146120b457600080fd5b805163ffffffff811681146120b457600080fd5b80516120b4816133fd565b80516120b481613051565b6000604082840312156135e857600080fd5b6040516040810181811067ffffffffffffffff8211171561360b5761360b6130bc565b8060405250809150825161361e816133e2565b8152602083015161362e816133fd565b6020919091015292915050565b60006020828403121561364d57600080fd5b815167ffffffffffffffff8082111561366557600080fd5b908301906101a0828603121561367a57600080fd5b6136826130eb565b82518281111561369157600080fd5b61369d87828601613447565b8252506020830151828111156136b257600080fd5b6136be87828601613447565b6020830152506040830151828111156136d657600080fd5b6136e287828601613447565b6040830152506060830151828111156136fa57600080fd5b61370687828601613447565b60608301525061371860808401613597565b608082015261372960a084016135ac565b60a082015261373a60c084016135c0565b60c082015261374b60e084016135cb565b60e082015261010061375e8185016135cb565b908201526101206137708482016135cb565b90820152610140838101518381111561378857600080fd5b61379488828701613447565b82840152505061016091506137ab868385016135d6565b91810191909152949350505050565b600063ffffffff808316818516818304811182151516156137dd576137dd6134c1565b02949350505050565b600064ffffffffff808316818516808303821115613806576138066134c1565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151613850818560208601612fc4565b9290920192915050565b6000835161386c818460208801612fc4565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138d5576138d56134c1565b5060010190565b6000602082840312156138ee57600080fd5b8151801515811461291d57600080fd5b600181811c9082168061391257607f821691505b6020821081036115a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561395d57600080fd5b5051919050565b6040815260006139776040830185612ff4565b828103602084015261197b8185612ff4565b6000825161399b818460208701612fc4565b9190910192915050565b7f2f000000000000000000000000000000000000000000000000000000000000008152600082516139dd816001850160208701612fc4565b9190910160010192915050565b7f7b226e616d65223a202200000000000000000000000000000000000000000000815260008851613a2281600a850160208d01612fc4565b7f2000000000000000000000000000000000000000000000000000000000000000600a918401918201528851613a5f81600b840160208d01612fc4565b8851910190613a7581600b840160208c01612fc4565b7f222c20226465736372697074696f6e223a202200000000000000000000000000600b92909101918201528651613ab381601e840160208b01612fc4565b7f222c202265787465726e616c5f75726c223a2022000000000000000000000000601e92909101918201528551613af1816032840160208a01612fc4565b613b61613b5b613b32613b2c6032858701017f222c2022696d616765223a2022000000000000000000000000000000000000008152600d0190565b8961383e565b7f222c2022656e637279707465645f6d656469615f75726c223a202200000000008152601b0190565b8661383e565b9b9a5050505050505050505050565b7f222c202264656372797074696f6e5f6b6579223a202200000000000000000000815260008751613ba8816016850160208c01612fc4565b7f222c202268617368223a202200000000000000000000000000000000000000006016918401918201528751613be5816022840160208c01612fc4565b7f222c20226465637279707465645f6d656469615f75726c223a20220000000000602292909101918201528651613c2381603d840160208b01612fc4565b7f222c2022616e696d6174696f6e5f75726c223a20220000000000000000000000603d92909101918201528551613c61816052840160208a01612fc4565b7f222c202270726f70657274696573223a207b226e756d626572223a2000000000605292909101918201528451613c9f81606e840160208901612fc4565b613d06613cdd613cd7606e848601017f2c20226e616d65223a20220000000000000000000000000000000000000000008152600b0190565b8761383e565b7f227d7d0000000000000000000000000000000000000000000000000000000000815260030190565b9a9950505050505050505050565b60008351613d26818460208801612fc4565b835190830190613806818360208801612fc4565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251613d7281601d850160208701612fc4565b91909101601d019291505056fe697066733a2f2f516d4e4d726141344b6342316570675766714e366b726e325755795434717061517a6245704d68586a42434e43572f6e66742e706e674142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080d000a",
  "deployedBytecode": "0x6080604052600436106102025760003560e01c806354fd4d501161011d578063ac9650d8116100b0578063e8a3d4851161007f578063efef39a111610064578063efef39a114610780578063f1ae885614610793578063fca3b5aa146107a857610260565b8063e8a3d48514610755578063ed6163411461076a57610260565b8063ac9650d8146106a6578063c87b56dd146106d3578063cb0793bc146106f3578063d445b9781461071357610260565b80638f32d59b116100ec5780638f32d59b146106115780639123f01e14610626578063938e3d7b14610653578063a2309ff81461067357610260565b806354fd4d50146105a257806384e7e3d3146105be5780638cb163f4146105d45780638da5cb5b146105fc57610260565b80632f54bf6e11610195578063449a52f811610164578063449a52f814610505578063457509bf146105255780634ddf47d41461053b578063545599ff1461058c57610260565b80632f54bf6e146104575780633474a4a614610477578063372c6533146104da5780633ccfd60b146104f057610260565b806317430c9e116101d157806317430c9e146103985780631d2c0b38146103bb57806324d7806c146104225780632df667fb1461044257610260565b806301ffc9a71461028b57806306fdde0314610302578063075461721461032457806310a7eb5d1461037657610260565b366102605761020f6107c8565b73ffffffffffffffffffffffffffffffffffffffff167f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f3460405161025691815260200190565b60405180910390a2005b6040517f46756e6374696f6e206e6f7420666f756e6400000000000000000000000000008152601481fd5b34801561029757600080fd5b506102ed6102a6366004612f82565b7fffffffff00000000000000000000000000000000000000000000000000000000167f19a31fdc000000000000000000000000000000000000000000000000000000001490565b60405190151581526020015b60405180910390f35b34801561030e57600080fd5b50610317610827565b6040516102f9919061303e565b34801561033057600080fd5b506008546103519073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102f9565b34801561038257600080fd5b50610396610391366004613073565b6108e6565b005b3480156103a457600080fd5b506103ad610aef565b6040519081526020016102f9565b3480156103c757600080fd5b50600b546103f9906cffffffffffffffffffffffffff8116906d0100000000000000000000000000900462ffffff1682565b604080516cffffffffffffffffffffffffff909316835262ffffff9091166020830152016102f9565b34801561042e57600080fd5b506102ed61043d366004613073565b610b0d565b34801561044e57600080fd5b506103ad610b6b565b34801561046357600080fd5b506102ed610472366004613073565b610bd9565b34801561048357600080fd5b5061048c610c38565b6040516102f99190600060c0820190508251151582526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b3480156104e657600080fd5b506103ad60025481565b3480156104fc57600080fd5b50610396610d01565b34801561051157600080fd5b506103ad610520366004613090565b611012565b34801561053157600080fd5b506103ad60065481565b34801561054757600080fd5b5061055b610556366004613208565b611114565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102f9565b34801561059857600080fd5b506103ad60075481565b3480156105ae57600080fd5b50604051600181526020016102f9565b3480156105ca57600080fd5b506103ad60045481565b3480156105e057600080fd5b5061035173ea7f4c52cbd4cf1036cdca8b16aca11f5b09cf6e81565b34801561060857600080fd5b506103516113c7565b34801561061d57600080fd5b506102ed6113f1565b34801561063257600080fd5b506103ad610641366004613073565b600c6020526000908152604090205481565b34801561065f57600080fd5b5061039661066e36600461323d565b611455565b34801561067f57600080fd5b506009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166103ad565b3480156106b257600080fd5b506106c66106c1366004613286565b6114cf565b6040516102f99190613349565b3480156106df57600080fd5b506103176106ee3660046133c9565b6115ae565b3480156106ff57600080fd5b5061039661070e36600461340e565b611984565b34801561071f57600080fd5b5061073361072e366004613073565b611ae1565b60408051825181526020808401519082015291810151908201526060016102f9565b34801561076157600080fd5b50610317611b4e565b34801561077657600080fd5b506103ad60035481565b6103ad61078e3660046133c9565b611bdc565b34801561079f57600080fd5b506103176120b9565b3480156107b457600080fd5b506103966107c3366004613073565b6120c6565b60007fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5433146000811461081f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013590565b3391505b5090565b60606108517fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b73ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561089b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108e1919081019061348c565b905090565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166109266107c8565b73ffffffffffffffffffffffffffffffffffffffff16146109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610a4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f46756e647320526563697069656e742063616e6e6f742062652030206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161099f565b600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8316179055610a936107c8565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f70a7ea5c664ab9c21baf3da59bb2f1e1ca33557b08a0031fab4f17076744995160405160405180910390a350565b600b546000906108e1906cffffffffffffffffffffffffff166121c6565b60008173ffffffffffffffffffffffffffffffffffffffff16610b4e7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff161492915050565b60006002544211610b7d575060035490565b600454600354610b8d91906134f0565b600254610b9a919061352d565b4210610ba65750600090565b600060045460025442610bb99190613545565b610bc3919061355c565b905080600354610bd39190613545565b91505090565b6000610c037fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b610c736040518060c0016040528060001515815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060c00160405280610c8a60025442101590565b15158152600b546cffffffffffffffffffffffffff8116602083015260025460408301526d0100000000000000000000000000900462ffffff1660608201526009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16608082015260a001610cfa610b6b565b9052919050565b7f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727954600203610d8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f484f4c4f47524150483a207265656e7472616e742063616c6c00000000000000604482015260640161099f565b610db560027f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b60055473ffffffffffffffffffffffffffffffffffffffff16610e34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f46756e647320526563697069656e742061646472657373206e6f742073657400604482015260640161099f565b6000610e3e6107c8565b600554909150479073ffffffffffffffffffffffffffffffffffffffff808416911614801590610ebb57507fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15610ef2576040517f1dab829b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460405160009173ffffffffffffffffffffffffffffffffffffffff16906203345090849084818181858888f193505050503d8060008114610f52576040519150601f19603f3d011682016040523d82523d6000602084013e610f57565b606091505b5050905080610f92576040517f39debd5b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60055460405183815273ffffffffffffffffffffffffffffffffffffffff918216918516907fa92ff919b850e4909ab2261d907ef955f11bc1716733a6cbece38d163a69af8a9060200160405180910390a350505061101060017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b565b60085460009073ffffffffffffffffffffffffffffffffffffffff166110366107c8565b73ffffffffffffffffffffffffffffffffffffffff1614611083576040517fd7ae9e8300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8161108f600182613545565b60045461109c91906134f0565b6007546110a99190613545565b42106110e1576040517f5fe2561a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110eb848461226b565b50506009547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1692915050565b600061113e7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b156111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f484f4c4f47524150483a20616c726561647920696e697469616c697a65640000604482015260640161099f565b337fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd556000828060200190518101906111de919061363b565b90506111ee816101400151612670565b61121a8160e001517fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf77277755565b610100810151600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790558051805161127a91600191602090910190612ef2565b50608081015164ffffffffff1660025560a081015163ffffffff811660035560c082015162ffffff166004819055610120830151600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9092169190911790556000916112ff91906137ba565b63ffffffff16826080015161131491906137e6565b64ffffffffff16600781905560068190556101608301518051600b805460209093015162ffffff166d0100000000000000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009093166cffffffffffffffffffffffffff9092169190911791909117905590506113b660017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b6113bf84612751565b949350505050565b60006108e17fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b600061141b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775490565b73ffffffffffffffffffffffffffffffffffffffff166114396107c8565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b61145d6113f1565b6114c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161099f565b6114cc81612670565b50565b6060815167ffffffffffffffff8111156114eb576114eb6130bc565b60405190808252806020026020018201604052801561151e57816020015b60608152602001906001900390816115095790505b50905060005b82518110156115a857611578308483815181106115435761154361380f565b60200260200101516115536107c8565b60405160200161156492919061385a565b6040516020818303038152906040526128f8565b82828151811061158a5761158a61380f565b602002602001018190525080806115a0906138a4565b915050611524565b50919050565b606060006115da7fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b6040517f4f558e790000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff821690634f558e7990602401602060405180830381865afa158015611648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166c91906138dc565b6116d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20646f6573206e6f7420657869737400000000604482015260640161099f565b60008173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561171f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052611765919081019061348c565b9050600060405180610160016040528083815260200160018054611788906138fe565b80601f01602080910402602001604051908101604052809291908181526020018280546117b4906138fe565b80156118015780601f106117d657610100808354040283529160200191611801565b820191906000526020600020905b8154815290600101906020018083116117e457829003601f168201915b505050505081526020016040518060600160405280603d8152602001613d80603d913981526020016040518060200160405280600081525081526020016040518060400160405280601c81526020017f68747470733a2f2f796f75722d6e66742d70726f6a6563742e636f6d0000000081525081526020016040518060400160405280601a81526020017f61723a2f2f656e637279707465644d656469615572694865726500000000000081525081526020016040518060400160405280601181526020017f64656372797074696f6e4b65794865726500000000000000000000000000000081525081526020016040518060400160405280601181526020017f756e697175654e6674486173684865726500000000000000000000000000000081525081526020016040518060400160405280601a81526020017f61723a2f2f6465637279707465644d656469615572694865726500000000000081525081526020018681526020016000815250905061197b81612924565b95945050505050565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166119c46107c8565b73ffffffffffffffffffffffffffffffffffffffff1614611a41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e0000000000604482015260640161099f565b600b805462ffffff83166d0100000000000000000000000000027fffffffffffffffffffffffffffffffff000000000000000000000000000000009091166cffffffffffffffffffffffffff851617179055611a9b6107c8565b73ffffffffffffffffffffffffffffffffffffffff167fc1ff5e4744ac8dd2b8027a10e3723b165975297501c71c4e7dcb8796d96375db60405160405180910390a25050565b611b0560405180606001604052806000815260200160008152602001600081525090565b506040805160608101825273ffffffffffffffffffffffffffffffffffffffff9092166000818152600c6020818152848320548087528187018490529390925290529082015290565b60008054611b5b906138fe565b80601f0160208091040260200160405190810160405280929190818152602001828054611b87906138fe565b8015611bd45780601f10611ba957610100808354040283529160200191611bd4565b820191906000526020600020905b815481529060010190602001808311611bb757829003601f168201915b505050505081565b6000611c067f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a31372795490565b600203611c6f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f484f4c4f47524150483a207265656e7472616e742063616c6c00000000000000604482015260640161099f565b611c9860027f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b81611ca4600182613545565b600454611cb191906134f0565b600754611cbe9190613545565b4210611cf6576040517f5fe2561a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600254421015611d32576040517ff12dcc7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b54600090611d50906cffffffffffffffffffffffffff166121c6565b9050611d5c84826134f0565b341015611db557600b54611d809085906cffffffffffffffffffffffffff166134f0565b6040517f6a1c179e00000000000000000000000000000000000000000000000000000000815260040161099f91815260200190565b600454611dc290856134f0565b600754611dcf9190613545565b6007556000611dde85836134f0565b611de89034613545565b600b549091506d0100000000000000000000000000900462ffffff1615801590611e7a5750600b546d0100000000000000000000000000900462ffffff1685600c6000611e336107c8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611e78919061352d565b115b15611eb1576040517f220ae94c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611ec2611ebc6107c8565b8661226b565b6000611eec7fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b905060008173ffffffffffffffffffffffffffffffffffffffff166377dbd8636040518163ffffffff1660e01b8152600401602060405180830381865afa158015611f3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f5f919061394b565b600954909150600090611f919089907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16613545565b611f9b908361352d565b611fa690600161352d565b90508488611fb26107c8565b73ffffffffffffffffffffffffffffffffffffffff167f4e26b0356a15833a75d497ecc40ebbb716b99466ed0dba9454f1fff451e25a9084604051611ff991815260200190565b60405180910390a483156120845761200f6107c8565b73ffffffffffffffffffffffffffffffffffffffff1684620334505a11612036575a61203b565b620334505b6040519091906000818181858888f193505050503d806000811461207b576040519150601f19603f3d011682016040523d82523d6000602084013e612080565b606091505b5050505b955050505050506120b460017f04b524dd539523930d3901481aa9455d7752b49add99e1647adb8b09a313727955565b919050565b60018054611b5b906138fe565b7fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff166121066107c8565b73ffffffffffffffffffffffffffffffffffffffff1614612183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a206f776e6572206f6e6c792066756e6374696f6e0000000000604482015260640161099f565b600880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550565b6000816000036121d857506000919050565b6040517ff5d781610000000000000000000000000000000000000000000000000000000081526004810183905273ea7f4c52cbd4cf1036cdca8b16aca11f5b09cf6e9063f5d7816190602401602060405180830381865afa158015612241573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612265919061394b565b92915050565b60006122957fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd5490565b905060008173ffffffffffffffffffffffffffffffffffffffff166377dbd8636040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612308919061394b565b90506000805b84811461266857600980547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffffffff000000000000000000000000000000000000000000000000000000009091161790555b60095473ffffffffffffffffffffffffffffffffffffffff851690634f558e79906123ae907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168661352d565b6040518263ffffffff1660e01b81526004016123cc91815260200190565b602060405180830381865afa1580156123e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061240d91906138dc565b806124bb575060095473ffffffffffffffffffffffffffffffffffffffff8516906323250cae9061245c907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168661352d565b6040518263ffffffff1660e01b815260040161247a91815260200190565b602060405180830381865afa158015612497573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124bb91906138dc565b1561251457600980547bffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffffffff00000000000000000000000000000000000000000000000000000000909116179055612365565b6009546040517f3b4f1b2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301527bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90921660248201819052935090851690633b4f1b2690604401600060405180830381600087803b1580156125aa57600080fd5b505af11580156125be573d6000803e3d6000fd5b505050506000827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16846125ee919061352d565b9050827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f3a8a89b59a31c39a36febecb987e0657ab7b7c73b60ebacb44dcb9886c2d5c8a8360405161265791815260200190565b60405180910390a35060010161230e565b505050505050565b600080805461267e906138fe565b80601f01602080910402602001604051908101604052809291908181526020018280546126aa906138fe565b80156126f75780601f106126cc576101008083540402835291602001916126f7565b820191906000526020600020905b8154815290600101906020018083116126da57829003601f168201915b5050855193945061271393600093506020870192509050612ef2565b507fc9c7c3fe08b88b4df9d4d47ef47d2c43d55c025a0ba88ca442580ed9e7348a168183604051612745929190613964565b60405180910390a15050565b600061277b7f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a015490565b156127e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4552433732313a20616c726561647920696e697469616c697a65640000000000604482015260640161099f565b337fe9fcff60011c1a99f7b7244d1f2d9da93d79ea8ef3654ce590d775575255b2bd8190557fb56711ba6bd3ded7639fc335ee7524fe668a79d7558c85992e3f8494cf7727775473ffffffffffffffffffffffffffffffffffffffff81166128a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f484f4c4f47524150483a206f776e6572206e6f74207365740000000000000000604482015260640161099f565b6128cf60017f4e5f991bca30eca2d4643aaefa807e88f96a4a97398933d572a3c0d973004a0155565b507f4ddf47d4000000000000000000000000000000000000000000000000000000009392505050565b606061291d8383604051806060016040528060278152602001613dfd6027913961293c565b9392505050565b60606000612931836129c1565b905061291d81612aea565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516129669190613989565b600060405180830381855af49150503d80600081146129a1576040519150601f19603f3d011682016040523d82523d6000602084013e6129a6565b606091505b50915091506129b786838387612b1b565b9695505050505050565b606080606060008461014001511115612a04576129e2846101400151612bbb565b6040516020016129f291906139a5565b60405160208183030381529060405291505b612a12846101200151612bbb565b845160208087015160808801516040808a015160a08b01519151969750612a409688958a95949391016139ea565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260c086015160e0870151610100880151606089015189519495612a96958891602001613b70565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052612ad29291602001613d14565b60405160208183030381529060405292505050919050565b6060612af582612c79565b604051602001612b059190613d3a565b6040516020818303038152906040529050919050565b60608315612bb1578251600003612baa5773ffffffffffffffffffffffffffffffffffffffff85163b612baa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161099f565b50816113bf565b6113bf8383612dcc565b60606000612bc883612e10565b600101905060008167ffffffffffffffff811115612be857612be86130bc565b6040519080825280601f01601f191660200182016040528015612c12576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084612c1c57509392505050565b60608151600003612c9857505060408051602081019091526000815290565b6000604051806060016040528060408152602001613dbd6040913990506000600384516002612cc7919061352d565b612cd1919061355c565b612cdc9060046134f0565b67ffffffffffffffff811115612cf457612cf46130bc565b6040519080825280601f01601f191660200182016040528015612d1e576020820181803683370190505b509050600182016020820185865187015b80821015612d8a576003820191508151603f8160121c168501518453600184019350603f81600c1c168501518453600184019350603f8160061c168501518453600184019350603f8116850151845350600183019250612d2f565b5050600386510660018114612da65760028114612db957612dc1565b603d6001830353603d6002830353612dc1565b603d60018303535b509195945050505050565b815115612ddc5781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f919061303e565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612e59577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612e85576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612ea357662386f26fc10000830492506010015b6305f5e1008310612ebb576305f5e100830492506008015b6127108310612ecf57612710830492506004015b60648310612ee1576064830492506002015b600a83106122655760010192915050565b828054612efe906138fe565b90600052602060002090601f016020900481019282612f205760008555612f66565b82601f10612f3957805160ff1916838001178555612f66565b82800160010185558215612f66579182015b82811115612f66578251825591602001919060010190612f4b565b506108239291505b808211156108235760008155600101612f6e565b600060208284031215612f9457600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461291d57600080fd5b60005b83811015612fdf578181015183820152602001612fc7565b83811115612fee576000848401525b50505050565b6000815180845261300c816020860160208601612fc4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061291d6020830184612ff4565b73ffffffffffffffffffffffffffffffffffffffff811681146114cc57600080fd5b60006020828403121561308557600080fd5b813561291d81613051565b600080604083850312156130a357600080fd5b82356130ae81613051565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff8111828210171561310f5761310f6130bc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561315c5761315c6130bc565b604052919050565b600067ffffffffffffffff82111561317e5761317e6130bc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006131bd6131b884613164565b613115565b90508281528383830111156131d157600080fd5b828260208301376000602084830101529392505050565b600082601f8301126131f957600080fd5b61291d838335602085016131aa565b60006020828403121561321a57600080fd5b813567ffffffffffffffff81111561323157600080fd5b6113bf848285016131e8565b60006020828403121561324f57600080fd5b813567ffffffffffffffff81111561326657600080fd5b8201601f8101841361327757600080fd5b6113bf848235602084016131aa565b6000602080838503121561329957600080fd5b823567ffffffffffffffff808211156132b157600080fd5b818501915085601f8301126132c557600080fd5b8135818111156132d7576132d76130bc565b8060051b6132e6858201613115565b918252838101850191858101908984111561330057600080fd5b86860192505b8383101561333c5782358581111561331e5760008081fd5b61332c8b89838a01016131e8565b8352509186019190860190613306565b9998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156133bc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526133aa858351612ff4565b94509285019290850190600101613370565b5092979650505050505050565b6000602082840312156133db57600080fd5b5035919050565b6cffffffffffffffffffffffffff811681146114cc57600080fd5b62ffffff811681146114cc57600080fd5b6000806040838503121561342157600080fd5b823561342c816133e2565b9150602083013561343c816133fd565b809150509250929050565b600082601f83011261345857600080fd5b81516134666131b882613164565b81815284602083860101111561347b57600080fd5b6113bf826020830160208701612fc4565b60006020828403121561349e57600080fd5b815167ffffffffffffffff8111156134b557600080fd5b6113bf84828501613447565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613528576135286134c1565b500290565b60008219821115613540576135406134c1565b500190565b600082821015613557576135576134c1565b500390565b600082613592577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b805164ffffffffff811681146120b457600080fd5b805163ffffffff811681146120b457600080fd5b80516120b4816133fd565b80516120b481613051565b6000604082840312156135e857600080fd5b6040516040810181811067ffffffffffffffff8211171561360b5761360b6130bc565b8060405250809150825161361e816133e2565b8152602083015161362e816133fd565b6020919091015292915050565b60006020828403121561364d57600080fd5b815167ffffffffffffffff8082111561366557600080fd5b908301906101a0828603121561367a57600080fd5b6136826130eb565b82518281111561369157600080fd5b61369d87828601613447565b8252506020830151828111156136b257600080fd5b6136be87828601613447565b6020830152506040830151828111156136d657600080fd5b6136e287828601613447565b6040830152506060830151828111156136fa57600080fd5b61370687828601613447565b60608301525061371860808401613597565b608082015261372960a084016135ac565b60a082015261373a60c084016135c0565b60c082015261374b60e084016135cb565b60e082015261010061375e8185016135cb565b908201526101206137708482016135cb565b90820152610140838101518381111561378857600080fd5b61379488828701613447565b82840152505061016091506137ab868385016135d6565b91810191909152949350505050565b600063ffffffff808316818516818304811182151516156137dd576137dd6134c1565b02949350505050565b600064ffffffffff808316818516808303821115613806576138066134c1565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008151613850818560208601612fc4565b9290920192915050565b6000835161386c818460208801612fc4565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036138d5576138d56134c1565b5060010190565b6000602082840312156138ee57600080fd5b8151801515811461291d57600080fd5b600181811c9082168061391257607f821691505b6020821081036115a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561395d57600080fd5b5051919050565b6040815260006139776040830185612ff4565b828103602084015261197b8185612ff4565b6000825161399b818460208701612fc4565b9190910192915050565b7f2f000000000000000000000000000000000000000000000000000000000000008152600082516139dd816001850160208701612fc4565b9190910160010192915050565b7f7b226e616d65223a202200000000000000000000000000000000000000000000815260008851613a2281600a850160208d01612fc4565b7f2000000000000000000000000000000000000000000000000000000000000000600a918401918201528851613a5f81600b840160208d01612fc4565b8851910190613a7581600b840160208c01612fc4565b7f222c20226465736372697074696f6e223a202200000000000000000000000000600b92909101918201528651613ab381601e840160208b01612fc4565b7f222c202265787465726e616c5f75726c223a2022000000000000000000000000601e92909101918201528551613af1816032840160208a01612fc4565b613b61613b5b613b32613b2c6032858701017f222c2022696d616765223a2022000000000000000000000000000000000000008152600d0190565b8961383e565b7f222c2022656e637279707465645f6d656469615f75726c223a202200000000008152601b0190565b8661383e565b9b9a5050505050505050505050565b7f222c202264656372797074696f6e5f6b6579223a202200000000000000000000815260008751613ba8816016850160208c01612fc4565b7f222c202268617368223a202200000000000000000000000000000000000000006016918401918201528751613be5816022840160208c01612fc4565b7f222c20226465637279707465645f6d656469615f75726c223a20220000000000602292909101918201528651613c2381603d840160208b01612fc4565b7f222c2022616e696d6174696f6e5f75726c223a20220000000000000000000000603d92909101918201528551613c61816052840160208a01612fc4565b7f222c202270726f70657274696573223a207b226e756d626572223a2000000000605292909101918201528451613c9f81606e840160208901612fc4565b613d06613cdd613cd7606e848601017f2c20226e616d65223a20220000000000000000000000000000000000000000008152600b0190565b8761383e565b7f227d7d0000000000000000000000000000000000000000000000000000000000815260030190565b9a9950505050505050505050565b60008351613d26818460208801612fc4565b835190830190613806818360208801612fc4565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815260008251613d7281601d850160208701612fc4565b91909101601d019291505056fe697066733a2f2f516d4e4d726141344b6342316570675766714e366b726e325755795434717061517a6245704d68586a42434e43572f6e66742e706e674142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a164736f6c634300080d000a",
  "devdoc": {
    "details": "This contract subscribes to the following HolographERC721 events:       - customContractURI       Do not enable or subscribe to any other events unless you modified the source code for them.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor is left empty and init is used instead"
      },
      "currentTheoricalMaxSupply()": {
        "details": "The max supply is calculated based on the current time and the mint interval, by subtracting      the elapsed_mint intervals from the initial max supply.      - The max supply is the initial max supply if the current time is less than the start date.      - The max supply is zero if the current time is greater than the end date.      - The max supply is decreased by one for each mint interval that has passed.      - The max supply is calculated by subtracting the intervals elapsed from the initial max supply.",
        "returns": {
          "_0": "max supply"
        }
      },
      "init(bytes)": {
        "details": "This function is called by the deployer/the factory when creating a contract",
        "params": {
          "initPayload": "abi encoded payload (CountdownERC721Initializer struct) to use for contract initilaization"
        }
      },
      "isAdmin(address)": {
        "details": "Getter for admin role associated with the contract to handle metadata",
        "returns": {
          "_0": "boolean if address is admin"
        }
      },
      "mintTo(address,uint256)": {
        "params": {
          "quantity": "quantity to mint",
          "recipient": "recipient to mint to"
        }
      },
      "mintedPerAddress(address)": {
        "details": "Number of NFTs the user has minted per address",
        "params": {
          "minter": "to get counts for"
        }
      },
      "purchase(uint256)": {
        "details": "This allows the user to purchase/mint a edition at the given price in the contract.",
        "params": {
          "quantity": "quantity to purchase"
        }
      },
      "saleDetails()": {
        "details": "Returns the sale details for the contract",
        "returns": {
          "_0": "SaleDetails sale information details"
        }
      },
      "setContractURI(string)": {
        "details": "Caller should be authorized to setup contractURI, e.g. contract admin.                  See {_canSetContractURI}.                  Emits {ContractURIUpdated Event}.",
        "params": {
          "_uri": "keccak256 hash of the role. e.g. keccak256(\"TRANSFER_ROLE\")"
        }
      },
      "setFundsRecipient(address)": {
        "params": {
          "newRecipientAddress": "new funds recipient address"
        }
      },
      "setMinter(address)": {
        "params": {
          "minterAddress": "new minter address"
        }
      },
      "setSaleConfiguration(uint104,uint24)": {
        "details": "This sets the sales configuration",
        "params": {
          "maxSalePurchasePerAddress": "Max # of purchases (public) per address allowed",
          "publicSalePrice": "New public sale price"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns a base64 encoded metadata URI for a given tokenId.",
        "params": {
          "tokenId": "The ID of the token to get URI for"
        },
        "returns": {
          "_0": "Token URI"
        }
      },
      "version()": {
        "details": "Used for contract versioning and validation",
        "returns": {
          "_0": "version of the contract"
        }
      }
    },
    "stateVariables": {
      "DESCRIPTION": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "FUNDS_RECIPIENT": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "INITIAL_END_DATE": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "INITIAL_MAX_SUPPLY": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "MINT_INTERVAL": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "START_DATE": {
        "details": "This storage variable is set only once in the init and can be considered as immutable"
      },
      "STATIC_GAS_LIMIT": {
        "details": "Gas limit for transferring funds"
      },
      "_baseURI": {
        "details": "Internal reference to the base URI"
      },
      "_currentTokenId": {
        "details": "Internal reference used for minting incremental token ids."
      },
      "dropsPriceOracle": {
        "details": "Address of the price oracle proxy"
      },
      "minter": {
        "details": "This account tokens on behalf of those that purchase them offchain"
      },
      "totalMintsByAddress": {
        "details": "Mapping for the total mints by address"
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "Access_MissingRoleOrAdmin(bytes32)": [
        {
          "notice": "Missing the given role or admin access"
        }
      ],
      "Access_OnlyAdmin()": [
        {
          "notice": "Only admin can access this function"
        }
      ],
      "Access_OnlyMinter()": [
        {
          "notice": "Only minter can access this function"
        }
      ],
      "Access_WithdrawNotAllowed()": [
        {
          "notice": "Withdraw is not allowed by this user"
        }
      ],
      "Admin_InvalidUpgradeAddress(address)": [
        {
          "notice": "Invalid admin upgrade address"
        }
      ],
      "Admin_UnableToFinalizeNotOpenEdition()": [
        {
          "notice": "Unable to finalize an edition not marked as open (size set to uint64_max_value)"
        }
      ],
      "ExternalMetadataRenderer_CallFailed()": [
        {
          "notice": "Call to external metadata renderer failed."
        }
      ],
      "FeePaymentFailed()": [
        {
          "notice": "Fee payout failed"
        }
      ],
      "LazyMint_AlreadyInitialized()": [
        {
          "notice": "Lazy mint initialization failed"
        }
      ],
      "MintFee_FundsSendFailure()": [
        {
          "notice": "Mint fee send failure"
        }
      ],
      "Mint_SoldOut()": [
        {
          "notice": "NFT sold out"
        }
      ],
      "NotInitialized()": [
        {
          "notice": "Contract is not initialized yet"
        }
      ],
      "Purchase_CountdownCompleted()": [
        {
          "notice": "The countdown has been completed"
        }
      ],
      "Purchase_TooManyForAddress()": [
        {
          "notice": "Too many purchase for address"
        }
      ],
      "Purchase_WrongPrice(uint256)": [
        {
          "notice": "Wrong price for purchase"
        }
      ],
      "Sale_Inactive()": [
        {
          "notice": "Sale is inactive"
        }
      ],
      "Setup_RoyaltyPercentageTooHigh(uint16)": [
        {
          "notice": "Royalty percentage too high"
        }
      ],
      "Withdraw_FundsSendFailure()": [
        {
          "notice": "Cannot withdraw funds due to ETH send failure."
        }
      ]
    },
    "events": {
      "FundsRecipientChanged(address,address)": {
        "notice": "Event emitted when the funds recipient is changed"
      },
      "FundsWithdrawn(address,address,uint256)": {
        "notice": "Event emitted when the funds are withdrawn from the minting contract"
      },
      "MintFeePayout(uint256,address,bool)": {
        "notice": "Event emitted for mint fee payout"
      },
      "NFTMinted(address,uint256,uint256)": {
        "notice": "Event emitted when an nfs is minted"
      },
      "OpenMintFinalized(address,uint256)": {
        "notice": "Event emitted when an open mint is finalized and further minting is closed forever on the contract."
      },
      "Sale(address,uint256,uint256,uint256)": {
        "notice": "Event emitted for each sale"
      },
      "SalesConfigChanged(address)": {
        "notice": "Sales configuration has been changed"
      }
    },
    "kind": "user",
    "methods": {
      "DESCRIPTION()": {
        "notice": "Getter for the description"
      },
      "END_DATE()": {
        "notice": "Getter for the end date"
      },
      "INITIAL_END_DATE()": {
        "notice": "Getter for the initial end date"
      },
      "INITIAL_MAX_SUPPLY()": {
        "notice": "Getter for the initial max supply"
      },
      "MINT_INTERVAL()": {
        "notice": "Getter for the mint interval"
      },
      "START_DATE()": {
        "notice": "Getter for the purchase start date"
      },
      "contractURI()": {
        "notice": "Returns the contract metadata URI."
      },
      "currentTheoricalMaxSupply()": {
        "notice": "Returns the theoretical maximum supply for the current time"
      },
      "getNativePrice()": {
        "notice": "Convert USD price to current price in native Ether units"
      },
      "init(bytes)": {
        "notice": "Used internally to initialize the contract instead of through a constructor"
      },
      "mintTo(address,uint256)": {
        "notice": "Minter account mints tokens to a recipient that has paid offchain"
      },
      "minter()": {
        "notice": "Getter for the minter"
      },
      "name()": {
        "notice": "Returns the name of the token through the holographer entrypoint"
      },
      "saleDetails()": {
        "notice": "Sale details"
      },
      "salesConfig()": {
        "notice": "Sales configuration"
      },
      "setContractURI(string)": {
        "notice": "Lets a contract admin set the URI for contract-level metadata."
      },
      "setFundsRecipient(address)": {
        "notice": "Set a different funds recipient"
      },
      "setMinter(address)": {
        "notice": "Set the minter address"
      },
      "totalMinted()": {
        "notice": "Returns the total amount of tokens minted in the contract."
      },
      "version()": {
        "notice": "Returns the version of the contract"
      },
      "withdraw()": {
        "notice": "This withdraws native tokens from the contract to the contract owner."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "contractURI",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 3389,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "DESCRIPTION",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 3392,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "START_DATE",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3395,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "INITIAL_MAX_SUPPLY",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3398,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "MINT_INTERVAL",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3401,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "FUNDS_RECIPIENT",
        "offset": 0,
        "slot": "5",
        "type": "t_address_payable"
      },
      {
        "astId": 3404,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "INITIAL_END_DATE",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3407,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "END_DATE",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3410,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "minter",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 3420,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "_currentTokenId",
        "offset": 0,
        "slot": "9",
        "type": "t_uint224"
      },
      {
        "astId": 3423,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "_baseURI",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      },
      {
        "astId": 3431,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "salesConfig",
        "offset": 0,
        "slot": "11",
        "type": "t_struct(CustomERC721SalesConfiguration)3305_storage"
      },
      {
        "astId": 3436,
        "contract": "src/token/CountdownERC721.sol:CountdownERC721",
        "label": "totalMintsByAddress",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CustomERC721SalesConfiguration)3305_storage": {
        "encoding": "inplace",
        "label": "struct CustomERC721SalesConfiguration",
        "members": [
          {
            "astId": 3301,
            "contract": "src/token/CountdownERC721.sol:CountdownERC721",
            "label": "publicSalePrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint104"
          },
          {
            "astId": 3304,
            "contract": "src/token/CountdownERC721.sol:CountdownERC721",
            "label": "maxSalePurchasePerAddress",
            "offset": 13,
            "slot": "0",
            "type": "t_uint24"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint104": {
        "encoding": "inplace",
        "label": "uint104",
        "numberOfBytes": "13"
      },
      "t_uint224": {
        "encoding": "inplace",
        "label": "uint224",
        "numberOfBytes": "28"
      },
      "t_uint24": {
        "encoding": "inplace",
        "label": "uint24",
        "numberOfBytes": "3"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}